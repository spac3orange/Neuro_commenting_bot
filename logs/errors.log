2023-10-23 12:47:25.878 | ERROR    | __main__:<module>:43 - HTTP Client says - ClientConnectorError: Cannot connect to host api.telegram.org:443 ssl:default [getaddrinfo failed]
2023-10-23 19:18:57.615 | ERROR    | __main__:start_params:34 - An error has been caught in function 'start_params', process 'MainProcess' (17776), thread 'MainThread' (7740):
Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\bot.py", line 49, in <module>
    asyncio.run(main())
    │       │   └ <function main at 0x000002617A3AEF20>
    │       └ <function run at 0x00000261753D16C0>
    └ <module 'asyncio' from 'C:\\Users\\som30\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\__init__.py'>

  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
           │      │   └ <coroutine object main at 0x000002617B118040>
           │      └ <function Runner.run at 0x0000026175439620>
           └ <asyncio.runners.Runner object at 0x000002617A1A6910>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<main() running at D:\Work Projects\Neuro_commenting_bot\bot.py:43> wait_for=<_GatheringFutu...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x0000026175437100>
           │    └ <ProactorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x000002617A1A6910>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 640, in run_until_complete
    self.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000002617550AF20>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x0000026175438EA0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1919, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x0000026175386660>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>

> File "D:\Work Projects\Neuro_commenting_bot\bot.py", line 34, in start_params
    await db_start()
          └ <function db_start at 0x000002617B0E62A0>

  File "D:\Work Projects\Neuro_commenting_bot\database\db_action.py", line 15, in db_start
    cur.execute("CREATE TABLE IF NOT EXISTS telegram_groups(group TEXT)")
    │   └ <method 'execute' of 'sqlite3.Cursor' objects>
    └ <sqlite3.Cursor object at 0x0000026178B4F6C0>

sqlite3.OperationalError: near "group": syntax error
2023-10-23 19:20:05.604 | ERROR    | __main__:start_params:34 - An error has been caught in function 'start_params', process 'MainProcess' (22692), thread 'MainThread' (24076):
Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\bot.py", line 49, in <module>
    asyncio.run(main())
    │       │   └ <function main at 0x00000239ADAFECA0>
    │       └ <function run at 0x00000239A8B216C0>
    └ <module 'asyncio' from 'C:\\Users\\som30\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\__init__.py'>

  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
           │      │   └ <coroutine object main at 0x00000239AE864040>
           │      └ <function Runner.run at 0x00000239A8B89620>
           └ <asyncio.runners.Runner object at 0x00000239AD8F6910>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<main() running at D:\Work Projects\Neuro_commenting_bot\bot.py:43> wait_for=<_GatheringFutu...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x00000239A8B87100>
           │    └ <ProactorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x00000239AD8F6910>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 640, in run_until_complete
    self.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x00000239A8C5AF20>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x00000239A8B88EA0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1919, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x00000239A8AD6660>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>

> File "D:\Work Projects\Neuro_commenting_bot\bot.py", line 34, in start_params
    await db_start()
          └ <function db_start at 0x00000239AE8362A0>

  File "D:\Work Projects\Neuro_commenting_bot\database\db_action.py", line 15, in db_start
    cur.execute("CREATE TABLE IF NOT EXISTS telegram_groups(group TEXT)")
    │   └ <method 'execute' of 'sqlite3.Cursor' objects>
    └ <sqlite3.Cursor object at 0x00000239AC29F6C0>

sqlite3.OperationalError: near "group": syntax error
2023-10-23 19:25:26.709 | ERROR    | handlers.tg_accs.get_tg_accs:get_acc_info:40 - Telegram server says - Bad Request: message text is empty
2023-10-24 18:22:34.351 | ERROR    | handlers.groups.triggers:group_triggers:26 - An error has been caught in function 'group_triggers', process 'MainProcess' (18016), thread 'MainThread' (20192):
Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\bot.py", line 51, in <module>
    asyncio.run(main())
    │       │   └ <function main at 0x000001B0A00C2E80>
    │       └ <function run at 0x000001B09B0E16C0>
    └ <module 'asyncio' from 'C:\\Users\\som30\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\__init__.py'>

  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
           │      │   └ <coroutine object main at 0x000001B0A0E045F0>
           │      └ <function Runner.run at 0x000001B09B14D620>
           └ <asyncio.runners.Runner object at 0x000001B09B15EFD0>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<main() running at D:\Work Projects\Neuro_commenting_bot\bot.py:45> wait_for=<_GatheringFutu...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x000001B09B147100>
           │    └ <ProactorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x000001B09B15EFD0>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 640, in run_until_complete
    self.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000001B09B21AF20>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000001B09B14CEA0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1919, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000001B09B096660>
    └ <Handle Task.task_wakeup(<Future finished result=True>)>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=True>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=True>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=True>)>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 308, in _process_update
    response = await self.feed_update(bot, update, **kwargs)
                     │    │           │    │         └ {'dispatcher': <Dispatcher '0x1b0a0e26950'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001B09FF6F010>,)}
                     │    │           │    └ Update(update_id=809805632, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                     │    │           └ <aiogram.client.bot.Bot object at 0x000001B09FF6F010>
                     │    └ <function Dispatcher.feed_update at 0x000001B09FEB5440>
                     └ <Dispatcher '0x1b0a0e26950'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 157, in feed_update
    response = await self.update.wrap_outer_middleware(
                     │    │      └ <function TelegramEventObserver.wrap_outer_middleware at 0x000001B09FE97E20>
                     │    └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x000001B0A0E60F90>
                     └ <Dispatcher '0x1b0a0e26950'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\middlewares\error.py", line 25, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x1b0a0e26950'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001B09FF6F010>,), 'bot': <aiogra...
                 │       └ Update(update_id=809805632, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ functools.partial(<aiogram.dispatcher.middlewares.user_context.UserContextMiddleware object at 0x000001B0A0E61650>, functools...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\middlewares\user_context.py", line 27, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x1b0a0e26950'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001B09FF6F010>,), 'bot': <aiogra...
                 │       └ Update(update_id=809805632, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ functools.partial(<aiogram.fsm.middleware.FSMContextMiddleware object at 0x000001B0A0E616D0>, <function TelegramEventObserver...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\fsm\middleware.py", line 41, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x1b0a0e26950'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001B09FF6F010>,), 'bot': <aiogra...
                 │       └ Update(update_id=809805632, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ <function TelegramEventObserver.trigger at 0x000001B0A06451C0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\telegram.py", line 120, in trigger
    return await wrapped_inner(event, kwargs)
                 │             │      └ {'dispatcher': <Dispatcher '0x1b0a0e26950'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001B09FF6F010>,), 'bot': <aiogra...
                 │             └ Update(update_id=809805632, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ <function CallableMixin.call at 0x000001B0A0A500E0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\handler.py", line 42, in call
    return await wrapped()
                 └ functools.partial(<bound method Dispatcher._listen_update of <Dispatcher '0x1b0a0e26950'>>, Update(update_id=809805632, messa...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 275, in _listen_update
    return await self.propagate_event(update_type=update_type, event=event, **kwargs)
                 │    │                           │                  │        └ {'dispatcher': <Dispatcher '0x1b0a0e26950'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001B09FF6F010>,), 'bot': <aiogra...
                 │    │                           │                  └ CallbackQuery(id='1987767170347442476', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │    │                           └ 'callback_query'
                 │    └ <function Router.propagate_event at 0x000001B09FEB4A40>
                 └ <Dispatcher '0x1b0a0e26950'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 116, in propagate_event
    return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
                 │        │                     │               │           └ {'dispatcher': <Dispatcher '0x1b0a0e26950'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001B09FF6F010>,), 'bot': <aiogra...
                 │        │                     │               └ CallbackQuery(id='1987767170347442476', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │        │                     └ <function Router.propagate_event.<locals>._wrapped at 0x000001B0A0A53420>
                 │        └ <function TelegramEventObserver.wrap_outer_middleware at 0x000001B09FE97E20>
                 └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x000001B0A0E5AFD0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 111, in _wrapped
    return await self._propagate_event(
                 │    └ <function Router._propagate_event at 0x000001B09FEB4AE0>
                 └ <Dispatcher '0x1b0a0e26950'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 144, in _propagate_event
    response = await router.propagate_event(update_type=update_type, event=event, **kwargs)
                     │      │                           │                  │        └ {'dispatcher': <Dispatcher '0x1b0a0e26950'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001B09FF6F010>,), 'bot': <aiogra...
                     │      │                           │                  └ CallbackQuery(id='1987767170347442476', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                     │      │                           └ 'callback_query'
                     │      └ <function Router.propagate_event at 0x000001B09FEB4A40>
                     └ <Router '0x1b09ff6e390'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 116, in propagate_event
    return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
                 │        │                     │               │           └ {'dispatcher': <Dispatcher '0x1b0a0e26950'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001B09FF6F010>,), 'bot': <aiogra...
                 │        │                     │               └ CallbackQuery(id='1987767170347442476', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │        │                     └ <function Router.propagate_event.<locals>._wrapped at 0x000001B0A0A51B20>
                 │        └ <function TelegramEventObserver.wrap_outer_middleware at 0x000001B09FE97E20>
                 └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x000001B0A0E4E510>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 111, in _wrapped
    return await self._propagate_event(
                 │    └ <function Router._propagate_event at 0x000001B09FEB4AE0>
                 └ <Router '0x1b09ff6e390'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 136, in _propagate_event
    response = await observer.trigger(event, **kwargs)
                     │        │       │        └ {'dispatcher': <Dispatcher '0x1b0a0e26950'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001B09FF6F010>,), 'bot': <aiogra...
                     │        │       └ CallbackQuery(id='1987767170347442476', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                     │        └ <function TelegramEventObserver.trigger at 0x000001B09FE97F60>
                     └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x000001B0A0E4E510>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\telegram.py", line 120, in trigger
    return await wrapped_inner(event, kwargs)
                 │             │      └ {'dispatcher': <Dispatcher '0x1b0a0e26950'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001B09FF6F010>,), 'bot': <aiogra...
                 │             └ CallbackQuery(id='1987767170347442476', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 └ <function CallableMixin.call at 0x000001B0A0A52A20>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\handler.py", line 42, in call
    return await wrapped()
                 └ functools.partial(<function group_triggers at 0x000001B0A0E5C220>, CallbackQuery(id='1987767170347442476', from_user=User(id=...

> File "D:\Work Projects\Neuro_commenting_bot\handlers\groups\triggers.py", line 26, in group_triggers
    triggers = await db_get_triggers_for_group() or 'Нет'
                     └ <function db_get_triggers_for_group at 0x000001B0A0E089A0>

TypeError: db_get_triggers_for_group() missing 1 required positional argument: 'group_name'
2023-10-24 18:25:23.475 | ERROR    | database.db_action:db_add_trigger_for_group:159 - Error adding triggers for Telegram group to the database: 'NoneType' object has no attribute 'split'
2023-10-25 13:18:49.360 | ERROR    | handlers.tg_accs.get_tg_accs:get_acc_info:40 - Telegram server says - Bad Request: message text is empty
2023-10-25 14:13:33.626 | ERROR    | data.config_telethon_scheme:login_phone:32 - Authorization error
2023-10-25 14:23:06.497 | ERROR    | data.config_telethon_scheme:join_group:102 - Error joining group: 'User' object has no attribute 'channel_id'
2023-10-25 14:26:35.992 | ERROR    | data.config_telethon_scheme:join_group:102 - Error joining group: 'User' object has no attribute 'channel_id'
2023-10-25 14:33:09.740 | ERROR    | data.config_telethon_scheme:join_group:102 - Error joining group: The user has been deleted/deactivated (caused by GetDialogsRequest)
2023-10-25 14:34:44.263 | ERROR    | handlers.tg_accs.get_tg_accs:get_acc_info:43 - Telegram server says - Bad Request: message text is empty
2023-10-25 15:01:11.310 | ERROR    | data.config_telethon_scheme:join_group:100 - Error joining group: The user has been deleted/deactivated (caused by GetDialogsRequest)
2023-10-25 15:11:58.176 | ERROR    | data.config_telethon_scheme:join_group:103 - Error joining group: The user has been deleted/deactivated (caused by GetDialogsRequest)
2023-10-25 15:14:59.619 | ERROR    | data.config_telethon_scheme:join_group:107 - Error joining group: The user has been deleted/deactivated (caused by GetDialogsRequest)
2023-10-25 15:21:37.053 | ERROR    | handlers.tg_accs.join_groups:accs_join_groups:34 - catching classes that do not inherit from BaseException is not allowed
2023-10-25 15:22:12.267 | ERROR    | handlers.tg_accs.join_groups:accs_join_groups:34 - catching classes that do not inherit from BaseException is not allowed
2023-10-25 15:22:56.154 | ERROR    | handlers.tg_accs.join_groups:accs_join_groups:34 - catching classes that do not inherit from BaseException is not allowed
2023-10-25 15:23:19.636 | ERROR    | data.config_telethon_scheme:join_group:107 - Error joining group: The user has been deleted/deactivated (caused by GetDialogsRequest)
2023-10-25 15:25:22.612 | ERROR    | data.config_telethon_scheme:join_group:104 - The user has been deleted/deactivated (caused by GetDialogsRequest)
2023-10-25 15:28:13.357 | ERROR    | data.config_telethon_scheme:join_group:104 - The user has been deleted/deactivated (caused by GetDialogsRequest)
2023-10-25 15:28:23.724 | ERROR    | data.config_telethon_scheme:join_group:104 - The user has been deleted/deactivated (caused by GetDialogsRequest)
2023-10-26 06:57:11.638 | ERROR    | database.db_action:get_groups_and_triggers:227 - Error retrieving groups and triggers from the database: name 'cur' is not defined
2023-10-26 07:01:58.716 | ERROR    | database.db_action:get_groups_and_triggers:239 - Error retrieving groups and triggers from the database: name 'cur' is not defined
2023-10-26 07:23:24.167 | ERROR    | database.db_action:get_groups_and_triggers:239 - Error retrieving groups and triggers from the database: name 'cur' is not defined
2023-10-26 07:23:24.167 | ERROR    | database.db_action:db_get_all_telegram_groups:108 - Error retrieving Telegram groups from the database: name 'cur' is not defined
2023-10-26 07:23:41.117 | ERROR    | database.db_action:get_groups_and_triggers:239 - Error retrieving groups and triggers from the database: name 'cur' is not defined
2023-10-26 07:23:41.117 | ERROR    | database.db_action:db_get_all_telegram_groups:108 - Error retrieving Telegram groups from the database: name 'cur' is not defined
2023-10-26 07:24:00.255 | ERROR    | __main__:<module>:56 - HTTP Client says - ClientConnectorError: Cannot connect to host api.telegram.org:443 ssl:default [getaddrinfo failed]
2023-10-26 07:35:47.397 | ERROR    | database.db_action:db_get_all_tg_accounts:63 - Error retrieving Telegram accounts from the database: name 'cur' is not defined
2023-10-26 07:35:47.425 | ERROR    | __main__:<module>:58 - Cannot choose from an empty sequence
2023-10-26 07:37:11.328 | ERROR    | database.db_action:db_get_all_tg_accounts:63 - Error retrieving Telegram accounts from the database: name 'cur' is not defined
2023-10-26 07:37:11.335 | ERROR    | __main__:<module>:58 - Cannot choose from an empty sequence
2023-10-26 08:14:29.400 | ERROR    | database.db_action:db_get_all_tg_accounts:63 - Error retrieving Telegram accounts from the database: name 'cur' is not defined
2023-10-26 08:14:29.474 | ERROR    | __main__:<module>:58 - Cannot choose from an empty sequence
2023-10-26 08:15:00.333 | ERROR    | database.db_action:db_get_all_tg_accounts:63 - Error retrieving Telegram accounts from the database: name 'cur' is not defined
2023-10-26 08:15:00.343 | ERROR    | __main__:<module>:58 - Cannot choose from an empty sequence
2023-10-26 08:17:10.329 | ERROR    | database.db_action:get_groups_and_triggers:241 - Error retrieving groups and triggers from the database: 'NoneType' object has no attribute 'replace'
2023-10-26 08:17:10.365 | ERROR    | __main__:<module>:58 - func must be a callable or a textual reference to one
2023-10-26 08:19:49.427 | ERROR    | database.db_action:get_groups_and_triggers:242 - Error retrieving groups and triggers from the database: 'NoneType' object has no attribute 'replace'
2023-10-26 08:19:49.440 | ERROR    | __main__:<module>:58 - func must be a callable or a textual reference to one
2023-10-26 08:24:00.147 | ERROR    | database.db_action:get_groups_and_triggers:242 - Error retrieving groups and triggers from the database: 'NoneType' object has no attribute 'replace'
2023-10-26 08:24:00.170 | ERROR    | __main__:<module>:58 - func must be a callable or a textual reference to one
2023-10-26 08:28:28.242 | ERROR    | __main__:<module>:58 - func must be a callable or a textual reference to one
2023-10-26 08:32:38.168 | ERROR    | __main__:<module>:58 - func must be a callable or a textual reference to one
2023-10-26 09:12:14.317 | ERROR    | __main__:<module>:60 - a coroutine was expected, got None
2023-10-26 10:04:56.952 | ERROR    | data.config_telethon_scheme:monitor_channels:145 - Error monitoring channels: can't compare offset-naive and offset-aware datetimes
2023-10-26 10:05:56.642 | ERROR    | data.config_telethon_scheme:monitor_channels:145 - Error monitoring channels: can't compare offset-naive and offset-aware datetimes
2023-10-26 10:13:57.704 | ERROR    | data.config_telethon_scheme:monitor_channels:147 - Error monitoring channels: can't compare offset-naive and offset-aware datetimes
2023-10-26 10:21:01.933 | ERROR    | data.config_telethon_scheme:monitor_channels:147 - Error monitoring channels: can't compare offset-naive and offset-aware datetimes
2023-10-26 10:22:31.989 | ERROR    | data.config_telethon_scheme:monitor_channels:145 - Error monitoring channels: can't compare offset-naive and offset-aware datetimes
2023-10-26 15:12:39.825 | ERROR    | data.config_telethon_scheme:send_comments:198 - Error sending comments: You can't write in this chat (caused by SendMessageRequest)
2023-10-26 15:13:48.578 | ERROR    | data.config_telethon_scheme:join_group:115 - Error joining group: 'Dialog' object has no attribute 'username'
2023-10-26 15:17:53.000 | ERROR    | data.config_telethon_scheme:join_group:105 - 'Dialog' object has no attribute 'username'
2023-10-26 15:19:24.447 | ERROR    | data.config_telethon_scheme:send_comments:202 - Error sending comments: Chat admin privileges are required to do that in the specified chat (for example, to send a message in a channel which is not yours), or invalid permissions used for the channel or group (caused by SendMessageRequest)
2023-10-26 15:37:05.394 | ERROR    | data.config_telethon_scheme:send_comments:194 - Error sending comments: Invalid channel object. Make sure to pass the right types, for instance making sure that the request is designed for channels or otherwise look for a different one more suited (caused by SendMessageRequest)
2023-10-26 15:40:59.751 | ERROR    | data.config_telethon_scheme:send_comments:194 - Error sending comments: Invalid channel object. Make sure to pass the right types, for instance making sure that the request is designed for channels or otherwise look for a different one more suited (caused by SendMessageRequest)
2023-10-26 15:48:54.185 | ERROR    | data.config_telethon_scheme:send_comments:194 - Error sending comments: Invalid message type: <class 'telethon.tl.types.PeerChannel'>
2023-10-26 15:59:57.175 | ERROR    | data.config_telethon_scheme:send_comments:193 - Error sending comments: 'Message' object has no attribute 'message_id'
2023-10-26 16:01:44.587 | ERROR    | data.config_telethon_scheme:send_comments:193 - Error sending comments: Invalid channel object. Make sure to pass the right types, for instance making sure that the request is designed for channels or otherwise look for a different one more suited (caused by SendMessageRequest)
2023-10-26 16:06:56.826 | ERROR    | data.config_telethon_scheme:send_comments:193 - Error sending comments: Invalid channel object. Make sure to pass the right types, for instance making sure that the request is designed for channels or otherwise look for a different one more suited (caused by SendMessageRequest)
2023-10-26 16:21:38.361 | ERROR    | data.config_telethon_scheme:send_comments:193 - Error sending comments: Invalid channel object. Make sure to pass the right types, for instance making sure that the request is designed for channels or otherwise look for a different one more suited (caused by SendMessageRequest)
2023-10-26 16:28:49.684 | ERROR    | data.config_telethon_scheme:send_comments:193 - Error sending comments: Invalid channel object. Make sure to pass the right types, for instance making sure that the request is designed for channels or otherwise look for a different one more suited (caused by SendMessageRequest)
2023-10-26 16:29:36.083 | ERROR    | data.config_telethon_scheme:send_comments:193 - Error sending comments: Invalid channel object. Make sure to pass the right types, for instance making sure that the request is designed for channels or otherwise look for a different one more suited (caused by SendMessageRequest)
2023-10-26 16:30:56.475 | ERROR    | data.config_telethon_scheme:send_comments:193 - Error sending comments: Invalid channel object. Make sure to pass the right types, for instance making sure that the request is designed for channels or otherwise look for a different one more suited (caused by SendMessageRequest)
2023-10-26 16:31:10.753 | ERROR    | data.config_telethon_scheme:send_comments:193 - Error sending comments: Invalid channel object. Make sure to pass the right types, for instance making sure that the request is designed for channels or otherwise look for a different one more suited (caused by SendMessageRequest)
2023-10-26 16:33:28.986 | ERROR    | data.config_telethon_scheme:send_comments:193 - Error sending comments: Invalid channel object. Make sure to pass the right types, for instance making sure that the request is designed for channels or otherwise look for a different one more suited (caused by SendMessageRequest)
2023-10-26 16:38:36.003 | ERROR    | data.config_telethon_scheme:send_comments:193 - Error sending comments: Invalid channel object. Make sure to pass the right types, for instance making sure that the request is designed for channels or otherwise look for a different one more suited (caused by GetDiscussionMessageRequest)
2023-10-26 16:39:20.682 | ERROR    | data.config_telethon_scheme:send_comments:193 - Error sending comments: Invalid channel object. Make sure to pass the right types, for instance making sure that the request is designed for channels or otherwise look for a different one more suited (caused by GetDiscussionMessageRequest)
2023-10-26 16:45:37.147 | ERROR    | data.config_telethon_scheme:join_group:105 - 'Dialog' object has no attribute 'username'
2023-10-26 16:45:38.798 | ERROR    | data.config_telethon_scheme:join_group:105 - 'Dialog' object has no attribute 'username'
2023-10-26 16:46:51.843 | ERROR    | database.db_action:get_groups_and_triggers:274 - Error retrieving groups and triggers from the database: 'NoneType' object has no attribute 'replace'
2023-10-26 20:58:36.372 | ERROR    | data.config_telethon_scheme:send_comments:196 - Error sending comments: The message ID used in the peer was invalid (caused by GetDiscussionMessageRequest)
2023-10-27 13:45:54.808 | ERROR    | handlers.monitoring:monitoring_start:15 - В таблице нет аккаунтов для мониторинга.
2023-10-27 13:46:27.398 | ERROR    | handlers.monitoring:monitoring_start:15 - В таблице нет аккаунтов для мониторинга.
2023-10-27 13:53:27.479 | ERROR    | handlers.get_history:get_history:21 - [Errno 2] No such file or directory: 'data/history.txt'
2023-10-27 13:53:32.111 | ERROR    | handlers.monitoring:monitoring_start:15 - В таблице нет аккаунтов для мониторинга.
2023-10-27 14:17:31.293 | ERROR    | data.config_telethon_scheme:send_comments:212 - Error sending comments: type object 'datetime.datetime' has no attribute 'datetime'
2023-10-27 14:17:31.296 | ERROR    | data.config_telethon_scheme:monitor_channels:171 - Error monitoring channels: type object 'datetime.datetime' has no attribute 'datetime'
2023-10-27 14:17:54.317 | ERROR    | data.config_telethon_scheme:send_comments:212 - Error sending comments: type object 'datetime.datetime' has no attribute 'datetime'
2023-10-27 14:17:54.320 | ERROR    | data.config_telethon_scheme:monitor_channels:171 - Error monitoring channels: type object 'datetime.datetime' has no attribute 'datetime'
2023-10-27 14:25:36.852 | ERROR    | data.config_telethon_scheme:send_comments:213 - Error sending comments: 'charmap' codec can't encode characters in position 0-3: character maps to <undefined>
2023-10-27 14:25:36.855 | ERROR    | data.config_telethon_scheme:monitor_channels:171 - Error monitoring channels: 'charmap' codec can't encode characters in position 0-3: character maps to <undefined>
2023-10-27 14:34:24.095 | ERROR    | data.config_telethon_scheme:send_comments:213 - Error sending comments: The message ID used in the peer was invalid (caused by GetDiscussionMessageRequest)
2023-10-27 16:36:54.132 | ERROR    | data.config_telethon_scheme:send_comments:216 - Error sending comments: 'str' object has no attribute 'message'
2023-10-27 16:36:54.136 | ERROR    | data.config_telethon_scheme:send_comments:216 - Error sending comments: 'str' object has no attribute 'message'
2023-10-28 11:42:34.122 | ERROR    | handlers.get_history:get_history:22 - [Errno 2] No such file or directory: 'history.txt'
2023-10-28 12:45:51.753 | ERROR    | handlers.get_history:get_history:24 - Telegram server says - Bad Request: message is too long
2023-10-30 09:56:41.971 | ERROR    | handlers.get_history:get_history:25 - [Errno 2] No such file or directory: 'history.txt'
2023-10-30 10:28:16.958 | ERROR    | data.config_telethon_scheme:join_group:109 - 'Dialog' object has no attribute 'username'
2023-10-30 10:30:03.040 | ERROR    | data.config_telethon_scheme:join_group:109 - 'Dialog' object has no attribute 'username'
2023-10-30 10:32:39.994 | ERROR    | data.config_telethon_scheme:join_group:109 - 'Dialog' object has no attribute 'username'
2023-10-30 10:42:04.930 | ERROR    | data.config_telethon_scheme:join_group:124 - Error joining group: 'Dialog' object has no attribute 'username'
2023-10-30 10:45:06.982 | ERROR    | data.config_telethon_scheme:join_group:125 - Error joining group: 'Dialog' object has no attribute 'username'
2023-11-01 15:34:14.316 | ERROR    | handlers.tg_accs.add_tg_acc:add_tg_acc:64 - Two-steps verification is enabled and a password is required (caused by SignInRequest)
2023-11-01 15:53:43.590 | ERROR    | data.config_telethon_scheme:login_phone:46 - Authorization error
2023-11-01 15:56:39.036 | ERROR    | data.config_telethon_scheme:login_phone:46 - Authorization error
2023-11-01 15:58:43.227 | ERROR    | data.config_telethon_scheme:login_phone:46 - Authorization error
2023-11-01 16:00:51.007 | ERROR    | handlers.tg_accs.add_tg_acc:add_tg_acc:80 - Two-steps verification is enabled and a password is required (caused by SignInRequest)
2023-11-01 16:03:58.060 | ERROR    | handlers.tg_accs.add_tg_acc:add_tg_acc:82 - Two-steps verification is enabled and a password is required (caused by SignInRequest)
2023-11-01 16:06:00.832 | ERROR    | data.config_telethon_scheme:login_phone:46 - Authorization error
2023-11-01 16:07:18.305 | ERROR    | handlers.tg_accs.add_tg_acc:add_tg_acc:82 - Two-steps verification is enabled and a password is required (caused by SignInRequest)
2023-11-01 16:28:56.134 | ERROR    | handlers.tg_accs.add_tg_acc:add_tg_acc:81 - Two-steps verification is enabled and a password is required (caused by SignInRequest)
2023-11-01 16:34:52.539 | ERROR    | data.config_telethon_scheme:login_phone:46 - Authorization error
2023-11-01 16:35:33.694 | ERROR    | handlers.tg_accs.add_tg_acc:add_tg_acc:79 - Two-steps verification is enabled and a password is required (caused by SignInRequest)
2023-11-01 17:08:40.956 | ERROR    | data.config_telethon_scheme:join_group:136 - Error joining group: Could not find the input entity for PeerChannel(channel_id=2009132328) (PeerChannel). Please read https://docs.telethon.dev/en/stable/concepts/entities.html to find out more details.
2023-11-01 17:14:59.012 | ERROR    | data.config_telethon_scheme:join_group:136 - Error joining group: 'int' object has no attribute 'lstrip'
2023-11-01 17:16:01.763 | ERROR    | data.config_telethon_scheme:join_group:136 - Error joining group: Could not find the input entity for PeerChannel(channel_id=2009132328) (PeerChannel). Please read https://docs.telethon.dev/en/stable/concepts/entities.html to find out more details.
2023-11-01 17:18:01.623 | ERROR    | data.config_telethon_scheme:join_group:136 - Error joining group: 'int' object is not subscriptable
2023-11-01 17:21:31.491 | ERROR    | data.config_telethon_scheme:join_group:137 - Error joining group: 'int' object is not subscriptable
2023-11-01 17:22:24.893 | ERROR    | data.config_telethon_scheme:join_group:137 - Error joining group: Could not find the input entity for PeerUser(user_id=1002009132328) (PeerUser). Please read https://docs.telethon.dev/en/stable/concepts/entities.html to find out more details.
2023-11-01 17:27:46.162 | ERROR    | data.config_telethon_scheme:join_group:137 - Error joining group: UserMethods.get_entity() missing 1 required positional argument: 'entity'
2023-11-01 17:28:16.053 | ERROR    | data.config_telethon_scheme:join_group:137 - Error joining group: Could not find the input entity for PeerUser(user_id=2009132328) (PeerUser). Please read https://docs.telethon.dev/en/stable/concepts/entities.html to find out more details.
2023-11-01 17:33:19.169 | ERROR    | data.config_telethon_scheme:join_group:135 - Error joining group: Could not find the input entity for PeerChannel(channel_id=2009132328) (PeerChannel). Please read https://docs.telethon.dev/en/stable/concepts/entities.html to find out more details.
2023-11-01 17:33:49.952 | ERROR    | data.config_telethon_scheme:join_group:135 - Error joining group: Could not find the input entity for PeerChannel(channel_id=2009132328) (PeerChannel). Please read https://docs.telethon.dev/en/stable/concepts/entities.html to find out more details.
2023-11-01 17:34:50.848 | ERROR    | data.config_telethon_scheme:join_group:135 - Error joining group: Could not find the input entity for PeerChannel(channel_id=2009132328) (PeerChannel). Please read https://docs.telethon.dev/en/stable/concepts/entities.html to find out more details.
2023-11-01 17:39:48.776 | ERROR    | data.config_telethon_scheme:join_group:135 - Error joining group: Could not find the input entity for PeerChannel(channel_id=2009132328) (PeerChannel). Please read https://docs.telethon.dev/en/stable/concepts/entities.html to find out more details.
2023-11-01 17:40:57.393 | ERROR    | data.config_telethon_scheme:join_group:136 - Error joining group: Could not find the input entity for PeerChannel(channel_id=2009132328) (PeerChannel). Please read https://docs.telethon.dev/en/stable/concepts/entities.html to find out more details.
2023-11-01 17:58:42.012 | ERROR    | data.config_telethon_scheme:join_group:138 - Error joining group: Could not find the input entity for PeerChannel(channel_id=2009132328) (PeerChannel). Please read https://docs.telethon.dev/en/stable/concepts/entities.html to find out more details.
2023-11-01 18:00:35.231 | ERROR    | data.config_telethon_scheme:join_group:138 - Error joining group: Could not find the input entity for PeerChannel(channel_id=2009132328) (PeerChannel). Please read https://docs.telethon.dev/en/stable/concepts/entities.html to find out more details.
2023-11-01 18:02:33.243 | ERROR    | data.config_telethon_scheme:join_group:142 - Error joining group: Could not find the input entity for PeerChannel(channel_id=2009132328) (PeerChannel). Please read https://docs.telethon.dev/en/stable/concepts/entities.html to find out more details.
2023-11-01 18:05:10.193 | ERROR    | data.config_telethon_scheme:join_group:143 - Error joining group: Could not find the input entity for PeerChannel(channel_id=2009132328) (PeerChannel). Please read https://docs.telethon.dev/en/stable/concepts/entities.html to find out more details.
2023-11-01 18:07:55.030 | ERROR    | data.config_telethon_scheme:join_group:144 - Error joining group: Could not find the input entity for PeerChannel(channel_id=2009132328) (PeerChannel). Please read https://docs.telethon.dev/en/stable/concepts/entities.html to find out more details.
2023-11-01 18:10:50.230 | ERROR    | data.config_telethon_scheme:join_group:147 - Error joining group: Could not find the input entity for PeerChannel(channel_id=2009132328) (PeerChannel). Please read https://docs.telethon.dev/en/stable/concepts/entities.html to find out more details.
2023-11-01 18:12:00.216 | ERROR    | data.config_telethon_scheme:join_group:147 - Error joining group: Could not find the input entity for PeerChannel(channel_id=2009132328) (PeerChannel). Please read https://docs.telethon.dev/en/stable/concepts/entities.html to find out more details.
2023-11-01 18:51:05.394 | ERROR    | data.config_telethon_scheme:join_group:147 - Error joining group: Could not find the input entity for PeerChannel(channel_id=2055622148) (PeerChannel). Please read https://docs.telethon.dev/en/stable/concepts/entities.html to find out more details.
2023-11-01 20:22:52.975 | ERROR    | data.config_telethon_scheme:join_group:147 - Error joining group: Could not find the input entity for PeerChannel(channel_id=2009132328) (PeerChannel). Please read https://docs.telethon.dev/en/stable/concepts/entities.html to find out more details.
2023-11-02 02:13:46.164 | ERROR    | handlers.get_history:get_history:25 - [Errno 2] No such file or directory: 'history.txt'
2023-11-02 02:24:37.587 | ERROR    | handlers.monitoring:monitoring_start:16 - В таблице нет аккаунтов для мониторинга.
2023-11-02 02:26:53.525 | ERROR    | handlers.tg_accs.add_tg_acc:add_tg_acc:108 - Two-steps verification is enabled and a password is required (caused by SignInRequest)
2023-11-02 02:26:55.167 | ERROR    | handlers.tg_accs.add_tg_acc:add_tg_acc:118 - 'AuthTelethon' object has no attribute 'join_group'
2023-11-02 02:30:30.240 | ERROR    | handlers.tg_accs.add_tg_acc:add_tg_acc:108 - Two-steps verification is enabled and a password is required (caused by SignInRequest)
2023-11-02 02:30:32.283 | ERROR    | handlers.tg_accs.add_tg_acc:add_tg_acc:118 - AuthTelethon.join_group() missing 1 required positional argument: 'group_link'
2023-11-02 11:56:41.457 | ERROR    | handlers.tg_accs.add_tg_acc:add_tg_acc:108 - Two-steps verification is enabled and a password is required (caused by SignInRequest)
2023-11-02 12:19:23.006 | ERROR    | database.db_action:get_groups_and_triggers:327 - Error retrieving groups and triggers from the database: 'NoneType' object has no attribute 'replace'
2023-11-02 14:16:50.524 | ERROR    | handlers.get_history:get_history:25 - [Errno 2] No such file or directory: 'history.txt'
2023-11-02 14:28:16.559 | ERROR    | handlers.groups.groups_settings:groups_settings:17 - An error has been caught in function 'groups_settings', process 'MainProcess' (9932), thread 'MainThread' (4280):
Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\bot.py", line 63, in <module>
    asyncio.run(main())
    │       │   └ <function main at 0x000001EDB06FA160>
    │       └ <function run at 0x000001EDB26596C0>
    └ <module 'asyncio' from 'C:\\Users\\som30\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\__init__.py'>

  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
           │      │   └ <coroutine object main at 0x000001EDB75FD9A0>
           │      └ <function Runner.run at 0x000001EDB26CD620>
           └ <asyncio.runners.Runner object at 0x000001EDB74F8790>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<main() running at D:\Work Projects\Neuro_commenting_bot\bot.py:57> wait_for=<_GatheringFutu...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x000001EDB26CB100>
           │    └ <ProactorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x000001EDB74F8790>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 640, in run_until_complete
    self.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000001EDB279AF20>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000001EDB26CCEA0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1919, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000001EDB2616660>
    └ <Handle Task.task_wakeup(<Future finished result=True>)>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=True>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=True>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=True>)>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 308, in _process_update
    response = await self.feed_update(bot, update, **kwargs)
                     │    │           │    │         └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,)}
                     │    │           │    └ Update(update_id=543873772, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                     │    │           └ <aiogram.client.bot.Bot object at 0x000001EDB74E18D0>
                     │    └ <function Dispatcher.feed_update at 0x000001EDB7439440>
                     └ <Dispatcher '0x1edb858bc10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 157, in feed_update
    response = await self.update.wrap_outer_middleware(
                     │    │      └ <function TelegramEventObserver.wrap_outer_middleware at 0x000001EDB7413E20>
                     │    └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x000001EDB858F2D0>
                     └ <Dispatcher '0x1edb858bc10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\middlewares\error.py", line 25, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873772, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ functools.partial(<aiogram.dispatcher.middlewares.user_context.UserContextMiddleware object at 0x000001EDB858F990>, functools...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\middlewares\user_context.py", line 27, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873772, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ functools.partial(<aiogram.fsm.middleware.FSMContextMiddleware object at 0x000001EDB858FA10>, <function TelegramEventObserver...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\fsm\middleware.py", line 41, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873772, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ <function TelegramEventObserver.trigger at 0x000001EDB855B240>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\telegram.py", line 120, in trigger
    return await wrapped_inner(event, kwargs)
                 │             │      └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │             └ Update(update_id=543873772, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ <function CallableMixin.call at 0x000001EDB85827A0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\handler.py", line 42, in call
    return await wrapped()
                 └ functools.partial(<bound method Dispatcher._listen_update of <Dispatcher '0x1edb858bc10'>>, Update(update_id=543873772, messa...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 275, in _listen_update
    return await self.propagate_event(update_type=update_type, event=event, **kwargs)
                 │    │                           │                  │        └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │    │                           │                  └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │    │                           └ 'callback_query'
                 │    └ <function Router.propagate_event at 0x000001EDB7438A40>
                 └ <Dispatcher '0x1edb858bc10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 116, in propagate_event
    return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
                 │        │                     │               │           └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │        │                     │               └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │        │                     └ <function Router.propagate_event.<locals>._wrapped at 0x000001EDB85A1F80>
                 │        └ <function TelegramEventObserver.wrap_outer_middleware at 0x000001EDB7413E20>
                 └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x000001EDB858D2D0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 111, in _wrapped
    return await self._propagate_event(
                 │    └ <function Router._propagate_event at 0x000001EDB7438AE0>
                 └ <Dispatcher '0x1edb858bc10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 144, in _propagate_event
    response = await router.propagate_event(update_type=update_type, event=event, **kwargs)
                     │      │                           │                  │        └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                     │      │                           │                  └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                     │      │                           └ 'callback_query'
                     │      └ <function Router.propagate_event at 0x000001EDB7438A40>
                     └ <Router '0x1edb74fba10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 116, in propagate_event
    return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
                 │        │                     │               │           └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │        │                     │               └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │        │                     └ <function Router.propagate_event.<locals>._wrapped at 0x000001EDB85A2520>
                 │        └ <function TelegramEventObserver.wrap_outer_middleware at 0x000001EDB7413E20>
                 └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x000001EDB840D150>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 111, in _wrapped
    return await self._propagate_event(
                 │    └ <function Router._propagate_event at 0x000001EDB7438AE0>
                 └ <Router '0x1edb74fba10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 136, in _propagate_event
    response = await observer.trigger(event, **kwargs)
                     │        │       │        └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                     │        │       └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                     │        └ <function TelegramEventObserver.trigger at 0x000001EDB7413F60>
                     └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x000001EDB840D150>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\telegram.py", line 120, in trigger
    return await wrapped_inner(event, kwargs)
                 │             │      └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │             └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 └ <function CallableMixin.call at 0x000001EDB85A1EE0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\handler.py", line 42, in call
    return await wrapped()
                 └ functools.partial(<function groups_settings at 0x000001EDB8406F20>, CallbackQuery(id='1987767170458090535', from_user=User(id...

> File "D:\Work Projects\Neuro_commenting_bot\handlers\groups\groups_settings.py", line 17, in groups_settings
    triggers = await db_get_triggers_for_group()
                     └ <function db_get_triggers_for_group at 0x000001EDB765A660>

TypeError: db_get_triggers_for_group() missing 1 required positional argument: 'group_name'
2023-11-02 14:28:16.584 | ERROR    | handlers.groups.groups_settings:groups_settings:18 - An error has been caught in function 'groups_settings', process 'MainProcess' (9932), thread 'MainThread' (4280):
Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\bot.py", line 63, in <module>
    asyncio.run(main())
    │       │   └ <function main at 0x000001EDB06FA160>
    │       └ <function run at 0x000001EDB26596C0>
    └ <module 'asyncio' from 'C:\\Users\\som30\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\__init__.py'>

  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
           │      │   └ <coroutine object main at 0x000001EDB75FD9A0>
           │      └ <function Runner.run at 0x000001EDB26CD620>
           └ <asyncio.runners.Runner object at 0x000001EDB74F8790>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<main() running at D:\Work Projects\Neuro_commenting_bot\bot.py:57> wait_for=<_GatheringFutu...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x000001EDB26CB100>
           │    └ <ProactorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x000001EDB74F8790>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 640, in run_until_complete
    self.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000001EDB279AF20>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000001EDB26CCEA0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1919, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000001EDB2616660>
    └ <Handle Task.task_wakeup(<Future finished result=True>)>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=True>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=True>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=True>)>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 308, in _process_update
    response = await self.feed_update(bot, update, **kwargs)
                     │    │           │    │         └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,)}
                     │    │           │    └ Update(update_id=543873772, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                     │    │           └ <aiogram.client.bot.Bot object at 0x000001EDB74E18D0>
                     │    └ <function Dispatcher.feed_update at 0x000001EDB7439440>
                     └ <Dispatcher '0x1edb858bc10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 157, in feed_update
    response = await self.update.wrap_outer_middleware(
                     │    │      └ <function TelegramEventObserver.wrap_outer_middleware at 0x000001EDB7413E20>
                     │    └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x000001EDB858F2D0>
                     └ <Dispatcher '0x1edb858bc10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\middlewares\error.py", line 25, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873772, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ functools.partial(<aiogram.dispatcher.middlewares.user_context.UserContextMiddleware object at 0x000001EDB858F990>, functools...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\middlewares\user_context.py", line 27, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873772, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ functools.partial(<aiogram.fsm.middleware.FSMContextMiddleware object at 0x000001EDB858FA10>, <function TelegramEventObserver...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\fsm\middleware.py", line 41, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873772, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ <function TelegramEventObserver.trigger at 0x000001EDB855B240>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\telegram.py", line 120, in trigger
    return await wrapped_inner(event, kwargs)
                 │             │      └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │             └ Update(update_id=543873772, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ <function CallableMixin.call at 0x000001EDB85827A0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\handler.py", line 42, in call
    return await wrapped()
                 └ functools.partial(<bound method Dispatcher._listen_update of <Dispatcher '0x1edb858bc10'>>, Update(update_id=543873772, messa...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 275, in _listen_update
    return await self.propagate_event(update_type=update_type, event=event, **kwargs)
                 │    │                           │                  │        └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │    │                           │                  └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │    │                           └ 'callback_query'
                 │    └ <function Router.propagate_event at 0x000001EDB7438A40>
                 └ <Dispatcher '0x1edb858bc10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 116, in propagate_event
    return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
                 │        │                     │               │           └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │        │                     │               └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │        │                     └ <function Router.propagate_event.<locals>._wrapped at 0x000001EDB85A1F80>
                 │        └ <function TelegramEventObserver.wrap_outer_middleware at 0x000001EDB7413E20>
                 └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x000001EDB858D2D0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 111, in _wrapped
    return await self._propagate_event(
                 │    └ <function Router._propagate_event at 0x000001EDB7438AE0>
                 └ <Dispatcher '0x1edb858bc10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 144, in _propagate_event
    response = await router.propagate_event(update_type=update_type, event=event, **kwargs)
                     │      │                           │                  │        └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                     │      │                           │                  └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                     │      │                           └ 'callback_query'
                     │      └ <function Router.propagate_event at 0x000001EDB7438A40>
                     └ <Router '0x1edb74fba10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 116, in propagate_event
    return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
                 │        │                     │               │           └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │        │                     │               └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │        │                     └ <function Router.propagate_event.<locals>._wrapped at 0x000001EDB85A2520>
                 │        └ <function TelegramEventObserver.wrap_outer_middleware at 0x000001EDB7413E20>
                 └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x000001EDB840D150>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 111, in _wrapped
    return await self._propagate_event(
                 │    └ <function Router._propagate_event at 0x000001EDB7438AE0>
                 └ <Router '0x1edb74fba10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 136, in _propagate_event
    response = await observer.trigger(event, **kwargs)
                     │        │       │        └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                     │        │       └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                     │        └ <function TelegramEventObserver.trigger at 0x000001EDB7413F60>
                     └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x000001EDB840D150>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\telegram.py", line 120, in trigger
    return await wrapped_inner(event, kwargs)
                 │             │      └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │             └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 └ <function CallableMixin.call at 0x000001EDB85A1EE0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\handler.py", line 42, in call
    return await wrapped()
                 └ functools.partial(<function groups_settings at 0x000001EDB8406F20>, CallbackQuery(id='1987767170458090535', from_user=User(id...

> File "D:\Work Projects\Neuro_commenting_bot\handlers\groups\groups_settings.py", line 18, in groups_settings
    promts = await db_get_promts_for_group()
                   └ <function db_get_promts_for_group at 0x000001EDB7659B20>

TypeError: db_get_promts_for_group() missing 1 required positional argument: 'group_name'
2023-11-02 14:28:16.601 | ERROR    | handlers.groups.groups_settings:groups_settings:17 - An error has been caught in function 'groups_settings', process 'MainProcess' (9932), thread 'MainThread' (4280):
Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\bot.py", line 63, in <module>
    asyncio.run(main())
    │       │   └ <function main at 0x000001EDB06FA160>
    │       └ <function run at 0x000001EDB26596C0>
    └ <module 'asyncio' from 'C:\\Users\\som30\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\__init__.py'>

  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
           │      │   └ <coroutine object main at 0x000001EDB75FD9A0>
           │      └ <function Runner.run at 0x000001EDB26CD620>
           └ <asyncio.runners.Runner object at 0x000001EDB74F8790>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<main() running at D:\Work Projects\Neuro_commenting_bot\bot.py:57> wait_for=<_GatheringFutu...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x000001EDB26CB100>
           │    └ <ProactorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x000001EDB74F8790>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 640, in run_until_complete
    self.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000001EDB279AF20>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000001EDB26CCEA0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1919, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000001EDB2616660>
    └ <Handle Task.task_wakeup(<Future finished result=True>)>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=True>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=True>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=True>)>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 308, in _process_update
    response = await self.feed_update(bot, update, **kwargs)
                     │    │           │    │         └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,)}
                     │    │           │    └ Update(update_id=543873772, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                     │    │           └ <aiogram.client.bot.Bot object at 0x000001EDB74E18D0>
                     │    └ <function Dispatcher.feed_update at 0x000001EDB7439440>
                     └ <Dispatcher '0x1edb858bc10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 157, in feed_update
    response = await self.update.wrap_outer_middleware(
                     │    │      └ <function TelegramEventObserver.wrap_outer_middleware at 0x000001EDB7413E20>
                     │    └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x000001EDB858F2D0>
                     └ <Dispatcher '0x1edb858bc10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\middlewares\error.py", line 25, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873772, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ functools.partial(<aiogram.dispatcher.middlewares.user_context.UserContextMiddleware object at 0x000001EDB858F990>, functools...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\middlewares\user_context.py", line 27, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873772, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ functools.partial(<aiogram.fsm.middleware.FSMContextMiddleware object at 0x000001EDB858FA10>, <function TelegramEventObserver...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\fsm\middleware.py", line 41, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873772, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ <function TelegramEventObserver.trigger at 0x000001EDB855B240>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\telegram.py", line 120, in trigger
    return await wrapped_inner(event, kwargs)
                 │             │      └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │             └ Update(update_id=543873772, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ <function CallableMixin.call at 0x000001EDB85827A0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\handler.py", line 42, in call
    return await wrapped()
                 └ functools.partial(<bound method Dispatcher._listen_update of <Dispatcher '0x1edb858bc10'>>, Update(update_id=543873772, messa...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 275, in _listen_update
    return await self.propagate_event(update_type=update_type, event=event, **kwargs)
                 │    │                           │                  │        └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │    │                           │                  └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │    │                           └ 'callback_query'
                 │    └ <function Router.propagate_event at 0x000001EDB7438A40>
                 └ <Dispatcher '0x1edb858bc10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 116, in propagate_event
    return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
                 │        │                     │               │           └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │        │                     │               └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │        │                     └ <function Router.propagate_event.<locals>._wrapped at 0x000001EDB85A1F80>
                 │        └ <function TelegramEventObserver.wrap_outer_middleware at 0x000001EDB7413E20>
                 └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x000001EDB858D2D0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 111, in _wrapped
    return await self._propagate_event(
                 │    └ <function Router._propagate_event at 0x000001EDB7438AE0>
                 └ <Dispatcher '0x1edb858bc10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 144, in _propagate_event
    response = await router.propagate_event(update_type=update_type, event=event, **kwargs)
                     │      │                           │                  │        └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                     │      │                           │                  └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                     │      │                           └ 'callback_query'
                     │      └ <function Router.propagate_event at 0x000001EDB7438A40>
                     └ <Router '0x1edb74fba10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 116, in propagate_event
    return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
                 │        │                     │               │           └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │        │                     │               └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │        │                     └ <function Router.propagate_event.<locals>._wrapped at 0x000001EDB85A2520>
                 │        └ <function TelegramEventObserver.wrap_outer_middleware at 0x000001EDB7413E20>
                 └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x000001EDB840D150>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 111, in _wrapped
    return await self._propagate_event(
                 │    └ <function Router._propagate_event at 0x000001EDB7438AE0>
                 └ <Router '0x1edb74fba10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 136, in _propagate_event
    response = await observer.trigger(event, **kwargs)
                     │        │       │        └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                     │        │       └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                     │        └ <function TelegramEventObserver.trigger at 0x000001EDB7413F60>
                     └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x000001EDB840D150>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\telegram.py", line 120, in trigger
    return await wrapped_inner(event, kwargs)
                 │             │      └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │             └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 └ <function CallableMixin.call at 0x000001EDB85A1EE0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\handler.py", line 42, in call
    return await wrapped()
                 └ functools.partial(<function groups_settings at 0x000001EDB8406F20>, CallbackQuery(id='1987767170458090535', from_user=User(id...

> File "D:\Work Projects\Neuro_commenting_bot\handlers\groups\groups_settings.py", line 17, in groups_settings
    triggers = await db_get_triggers_for_group()
                     └ <function db_get_triggers_for_group at 0x000001EDB765A660>

TypeError: db_get_triggers_for_group() missing 1 required positional argument: 'group_name'
2023-11-02 14:28:16.619 | ERROR    | handlers.groups.groups_settings:groups_settings:18 - An error has been caught in function 'groups_settings', process 'MainProcess' (9932), thread 'MainThread' (4280):
Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\bot.py", line 63, in <module>
    asyncio.run(main())
    │       │   └ <function main at 0x000001EDB06FA160>
    │       └ <function run at 0x000001EDB26596C0>
    └ <module 'asyncio' from 'C:\\Users\\som30\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\__init__.py'>

  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
           │      │   └ <coroutine object main at 0x000001EDB75FD9A0>
           │      └ <function Runner.run at 0x000001EDB26CD620>
           └ <asyncio.runners.Runner object at 0x000001EDB74F8790>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<main() running at D:\Work Projects\Neuro_commenting_bot\bot.py:57> wait_for=<_GatheringFutu...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x000001EDB26CB100>
           │    └ <ProactorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x000001EDB74F8790>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 640, in run_until_complete
    self.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000001EDB279AF20>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000001EDB26CCEA0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1919, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000001EDB2616660>
    └ <Handle Task.task_wakeup(<Future finished result=True>)>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=True>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=True>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=True>)>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 308, in _process_update
    response = await self.feed_update(bot, update, **kwargs)
                     │    │           │    │         └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,)}
                     │    │           │    └ Update(update_id=543873772, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                     │    │           └ <aiogram.client.bot.Bot object at 0x000001EDB74E18D0>
                     │    └ <function Dispatcher.feed_update at 0x000001EDB7439440>
                     └ <Dispatcher '0x1edb858bc10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 157, in feed_update
    response = await self.update.wrap_outer_middleware(
                     │    │      └ <function TelegramEventObserver.wrap_outer_middleware at 0x000001EDB7413E20>
                     │    └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x000001EDB858F2D0>
                     └ <Dispatcher '0x1edb858bc10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\middlewares\error.py", line 25, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873772, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ functools.partial(<aiogram.dispatcher.middlewares.user_context.UserContextMiddleware object at 0x000001EDB858F990>, functools...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\middlewares\user_context.py", line 27, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873772, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ functools.partial(<aiogram.fsm.middleware.FSMContextMiddleware object at 0x000001EDB858FA10>, <function TelegramEventObserver...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\fsm\middleware.py", line 41, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873772, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ <function TelegramEventObserver.trigger at 0x000001EDB855B240>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\telegram.py", line 120, in trigger
    return await wrapped_inner(event, kwargs)
                 │             │      └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │             └ Update(update_id=543873772, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ <function CallableMixin.call at 0x000001EDB85827A0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\handler.py", line 42, in call
    return await wrapped()
                 └ functools.partial(<bound method Dispatcher._listen_update of <Dispatcher '0x1edb858bc10'>>, Update(update_id=543873772, messa...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 275, in _listen_update
    return await self.propagate_event(update_type=update_type, event=event, **kwargs)
                 │    │                           │                  │        └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │    │                           │                  └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │    │                           └ 'callback_query'
                 │    └ <function Router.propagate_event at 0x000001EDB7438A40>
                 └ <Dispatcher '0x1edb858bc10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 116, in propagate_event
    return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
                 │        │                     │               │           └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │        │                     │               └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │        │                     └ <function Router.propagate_event.<locals>._wrapped at 0x000001EDB85A1F80>
                 │        └ <function TelegramEventObserver.wrap_outer_middleware at 0x000001EDB7413E20>
                 └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x000001EDB858D2D0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 111, in _wrapped
    return await self._propagate_event(
                 │    └ <function Router._propagate_event at 0x000001EDB7438AE0>
                 └ <Dispatcher '0x1edb858bc10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 144, in _propagate_event
    response = await router.propagate_event(update_type=update_type, event=event, **kwargs)
                     │      │                           │                  │        └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                     │      │                           │                  └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                     │      │                           └ 'callback_query'
                     │      └ <function Router.propagate_event at 0x000001EDB7438A40>
                     └ <Router '0x1edb74fba10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 116, in propagate_event
    return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
                 │        │                     │               │           └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │        │                     │               └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │        │                     └ <function Router.propagate_event.<locals>._wrapped at 0x000001EDB85A2520>
                 │        └ <function TelegramEventObserver.wrap_outer_middleware at 0x000001EDB7413E20>
                 └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x000001EDB840D150>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 111, in _wrapped
    return await self._propagate_event(
                 │    └ <function Router._propagate_event at 0x000001EDB7438AE0>
                 └ <Router '0x1edb74fba10'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 136, in _propagate_event
    response = await observer.trigger(event, **kwargs)
                     │        │       │        └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                     │        │       └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                     │        └ <function TelegramEventObserver.trigger at 0x000001EDB7413F60>
                     └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x000001EDB840D150>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\telegram.py", line 120, in trigger
    return await wrapped_inner(event, kwargs)
                 │             │      └ {'dispatcher': <Dispatcher '0x1edb858bc10'>, 'bots': (<aiogram.client.bot.Bot object at 0x000001EDB74E18D0>,), 'bot': <aiogra...
                 │             └ CallbackQuery(id='1987767170458090535', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 └ <function CallableMixin.call at 0x000001EDB85A1EE0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\handler.py", line 42, in call
    return await wrapped()
                 └ functools.partial(<function groups_settings at 0x000001EDB8406F20>, CallbackQuery(id='1987767170458090535', from_user=User(id...

> File "D:\Work Projects\Neuro_commenting_bot\handlers\groups\groups_settings.py", line 18, in groups_settings
    promts = await db_get_promts_for_group()
                   └ <function db_get_promts_for_group at 0x000001EDB7659B20>

TypeError: db_get_promts_for_group() missing 1 required positional argument: 'group_name'
2023-11-02 14:28:32.642 | ERROR    | handlers.get_history:get_history:25 - [Errno 2] No such file or directory: 'history.txt'
2023-11-02 14:28:35.384 | ERROR    | handlers.groups.groups_settings:groups_settings:17 - An error has been caught in function 'groups_settings', process 'MainProcess' (13304), thread 'MainThread' (15324):
Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\bot.py", line 63, in <module>
    asyncio.run(main())
    │       │   └ <function main at 0x0000026C48C4A160>
    │       └ <function run at 0x0000026C4AB496C0>
    └ <module 'asyncio' from 'C:\\Users\\som30\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\__init__.py'>

  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
           │      │   └ <coroutine object main at 0x0000026C4FAAD9A0>
           │      └ <function Runner.run at 0x0000026C4ABBD620>
           └ <asyncio.runners.Runner object at 0x0000026C48C55ED0>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<main() running at D:\Work Projects\Neuro_commenting_bot\bot.py:57> wait_for=<_GatheringFutu...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x0000026C4ABBB100>
           │    └ <ProactorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x0000026C48C55ED0>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 640, in run_until_complete
    self.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x0000026C4AC7AF20>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x0000026C4ABBCEA0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1919, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x0000026C4AB06660>
    └ <Handle Task.task_wakeup(<Future finished result=True>)>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=True>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=True>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=True>)>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 308, in _process_update
    response = await self.feed_update(bot, update, **kwargs)
                     │    │           │    │         └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,)}
                     │    │           │    └ Update(update_id=543873776, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                     │    │           └ <aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>
                     │    └ <function Dispatcher.feed_update at 0x0000026C4F8E9440>
                     └ <Dispatcher '0x26c50a3bad0'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 157, in feed_update
    response = await self.update.wrap_outer_middleware(
                     │    │      └ <function TelegramEventObserver.wrap_outer_middleware at 0x0000026C4F8C3E20>
                     │    └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x0000026C50A3F1D0>
                     └ <Dispatcher '0x26c50a3bad0'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\middlewares\error.py", line 25, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873776, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ functools.partial(<aiogram.dispatcher.middlewares.user_context.UserContextMiddleware object at 0x0000026C50A3F890>, functools...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\middlewares\user_context.py", line 27, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873776, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ functools.partial(<aiogram.fsm.middleware.FSMContextMiddleware object at 0x0000026C50A3F910>, <function TelegramEventObserver...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\fsm\middleware.py", line 41, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873776, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ <function TelegramEventObserver.trigger at 0x0000026C50A2E7A0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\telegram.py", line 120, in trigger
    return await wrapped_inner(event, kwargs)
                 │             │      └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │             └ Update(update_id=543873776, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ <function CallableMixin.call at 0x0000026C50A2F4C0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\handler.py", line 42, in call
    return await wrapped()
                 └ functools.partial(<bound method Dispatcher._listen_update of <Dispatcher '0x26c50a3bad0'>>, Update(update_id=543873776, messa...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 275, in _listen_update
    return await self.propagate_event(update_type=update_type, event=event, **kwargs)
                 │    │                           │                  │        └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │    │                           │                  └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │    │                           └ 'callback_query'
                 │    └ <function Router.propagate_event at 0x0000026C4F8E8A40>
                 └ <Dispatcher '0x26c50a3bad0'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 116, in propagate_event
    return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
                 │        │                     │               │           └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │        │                     │               └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │        │                     └ <function Router.propagate_event.<locals>._wrapped at 0x0000026C50A2E980>
                 │        └ <function TelegramEventObserver.wrap_outer_middleware at 0x0000026C4F8C3E20>
                 └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x0000026C50A3D1D0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 111, in _wrapped
    return await self._propagate_event(
                 │    └ <function Router._propagate_event at 0x0000026C4F8E8AE0>
                 └ <Dispatcher '0x26c50a3bad0'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 144, in _propagate_event
    response = await router.propagate_event(update_type=update_type, event=event, **kwargs)
                     │      │                           │                  │        └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                     │      │                           │                  └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                     │      │                           └ 'callback_query'
                     │      └ <function Router.propagate_event at 0x0000026C4F8E8A40>
                     └ <Router '0x26c4f9aed90'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 116, in propagate_event
    return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
                 │        │                     │               │           └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │        │                     │               └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │        │                     └ <function Router.propagate_event.<locals>._wrapped at 0x0000026C50A51F80>
                 │        └ <function TelegramEventObserver.wrap_outer_middleware at 0x0000026C4F8C3E20>
                 └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x0000026C508BCFD0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 111, in _wrapped
    return await self._propagate_event(
                 │    └ <function Router._propagate_event at 0x0000026C4F8E8AE0>
                 └ <Router '0x26c4f9aed90'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 136, in _propagate_event
    response = await observer.trigger(event, **kwargs)
                     │        │       │        └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                     │        │       └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                     │        └ <function TelegramEventObserver.trigger at 0x0000026C4F8C3F60>
                     └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x0000026C508BCFD0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\telegram.py", line 120, in trigger
    return await wrapped_inner(event, kwargs)
                 │             │      └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │             └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 └ <function CallableMixin.call at 0x0000026C50A52520>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\handler.py", line 42, in call
    return await wrapped()
                 └ functools.partial(<function groups_settings at 0x0000026C508B6F20>, CallbackQuery(id='1987767170046810495', from_user=User(id...

> File "D:\Work Projects\Neuro_commenting_bot\handlers\groups\groups_settings.py", line 17, in groups_settings
    triggers = await db_get_triggers_for_group()
                     └ <function db_get_triggers_for_group at 0x0000026C4FB0E660>

TypeError: db_get_triggers_for_group() missing 1 required positional argument: 'group_name'
2023-11-02 14:28:35.407 | ERROR    | handlers.groups.groups_settings:groups_settings:18 - An error has been caught in function 'groups_settings', process 'MainProcess' (13304), thread 'MainThread' (15324):
Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\bot.py", line 63, in <module>
    asyncio.run(main())
    │       │   └ <function main at 0x0000026C48C4A160>
    │       └ <function run at 0x0000026C4AB496C0>
    └ <module 'asyncio' from 'C:\\Users\\som30\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\__init__.py'>

  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
           │      │   └ <coroutine object main at 0x0000026C4FAAD9A0>
           │      └ <function Runner.run at 0x0000026C4ABBD620>
           └ <asyncio.runners.Runner object at 0x0000026C48C55ED0>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<main() running at D:\Work Projects\Neuro_commenting_bot\bot.py:57> wait_for=<_GatheringFutu...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x0000026C4ABBB100>
           │    └ <ProactorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x0000026C48C55ED0>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 640, in run_until_complete
    self.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x0000026C4AC7AF20>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x0000026C4ABBCEA0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1919, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x0000026C4AB06660>
    └ <Handle Task.task_wakeup(<Future finished result=True>)>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=True>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=True>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=True>)>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 308, in _process_update
    response = await self.feed_update(bot, update, **kwargs)
                     │    │           │    │         └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,)}
                     │    │           │    └ Update(update_id=543873776, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                     │    │           └ <aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>
                     │    └ <function Dispatcher.feed_update at 0x0000026C4F8E9440>
                     └ <Dispatcher '0x26c50a3bad0'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 157, in feed_update
    response = await self.update.wrap_outer_middleware(
                     │    │      └ <function TelegramEventObserver.wrap_outer_middleware at 0x0000026C4F8C3E20>
                     │    └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x0000026C50A3F1D0>
                     └ <Dispatcher '0x26c50a3bad0'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\middlewares\error.py", line 25, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873776, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ functools.partial(<aiogram.dispatcher.middlewares.user_context.UserContextMiddleware object at 0x0000026C50A3F890>, functools...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\middlewares\user_context.py", line 27, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873776, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ functools.partial(<aiogram.fsm.middleware.FSMContextMiddleware object at 0x0000026C50A3F910>, <function TelegramEventObserver...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\fsm\middleware.py", line 41, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873776, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ <function TelegramEventObserver.trigger at 0x0000026C50A2E7A0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\telegram.py", line 120, in trigger
    return await wrapped_inner(event, kwargs)
                 │             │      └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │             └ Update(update_id=543873776, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ <function CallableMixin.call at 0x0000026C50A2F4C0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\handler.py", line 42, in call
    return await wrapped()
                 └ functools.partial(<bound method Dispatcher._listen_update of <Dispatcher '0x26c50a3bad0'>>, Update(update_id=543873776, messa...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 275, in _listen_update
    return await self.propagate_event(update_type=update_type, event=event, **kwargs)
                 │    │                           │                  │        └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │    │                           │                  └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │    │                           └ 'callback_query'
                 │    └ <function Router.propagate_event at 0x0000026C4F8E8A40>
                 └ <Dispatcher '0x26c50a3bad0'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 116, in propagate_event
    return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
                 │        │                     │               │           └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │        │                     │               └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │        │                     └ <function Router.propagate_event.<locals>._wrapped at 0x0000026C50A2E980>
                 │        └ <function TelegramEventObserver.wrap_outer_middleware at 0x0000026C4F8C3E20>
                 └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x0000026C50A3D1D0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 111, in _wrapped
    return await self._propagate_event(
                 │    └ <function Router._propagate_event at 0x0000026C4F8E8AE0>
                 └ <Dispatcher '0x26c50a3bad0'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 144, in _propagate_event
    response = await router.propagate_event(update_type=update_type, event=event, **kwargs)
                     │      │                           │                  │        └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                     │      │                           │                  └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                     │      │                           └ 'callback_query'
                     │      └ <function Router.propagate_event at 0x0000026C4F8E8A40>
                     └ <Router '0x26c4f9aed90'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 116, in propagate_event
    return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
                 │        │                     │               │           └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │        │                     │               └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │        │                     └ <function Router.propagate_event.<locals>._wrapped at 0x0000026C50A51F80>
                 │        └ <function TelegramEventObserver.wrap_outer_middleware at 0x0000026C4F8C3E20>
                 └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x0000026C508BCFD0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 111, in _wrapped
    return await self._propagate_event(
                 │    └ <function Router._propagate_event at 0x0000026C4F8E8AE0>
                 └ <Router '0x26c4f9aed90'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 136, in _propagate_event
    response = await observer.trigger(event, **kwargs)
                     │        │       │        └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                     │        │       └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                     │        └ <function TelegramEventObserver.trigger at 0x0000026C4F8C3F60>
                     └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x0000026C508BCFD0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\telegram.py", line 120, in trigger
    return await wrapped_inner(event, kwargs)
                 │             │      └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │             └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 └ <function CallableMixin.call at 0x0000026C50A52520>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\handler.py", line 42, in call
    return await wrapped()
                 └ functools.partial(<function groups_settings at 0x0000026C508B6F20>, CallbackQuery(id='1987767170046810495', from_user=User(id...

> File "D:\Work Projects\Neuro_commenting_bot\handlers\groups\groups_settings.py", line 18, in groups_settings
    promts = await db_get_promts_for_group()
                   └ <function db_get_promts_for_group at 0x0000026C4FB0DB20>

TypeError: db_get_promts_for_group() missing 1 required positional argument: 'group_name'
2023-11-02 14:28:35.425 | ERROR    | handlers.groups.groups_settings:groups_settings:17 - An error has been caught in function 'groups_settings', process 'MainProcess' (13304), thread 'MainThread' (15324):
Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\bot.py", line 63, in <module>
    asyncio.run(main())
    │       │   └ <function main at 0x0000026C48C4A160>
    │       └ <function run at 0x0000026C4AB496C0>
    └ <module 'asyncio' from 'C:\\Users\\som30\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\__init__.py'>

  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
           │      │   └ <coroutine object main at 0x0000026C4FAAD9A0>
           │      └ <function Runner.run at 0x0000026C4ABBD620>
           └ <asyncio.runners.Runner object at 0x0000026C48C55ED0>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<main() running at D:\Work Projects\Neuro_commenting_bot\bot.py:57> wait_for=<_GatheringFutu...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x0000026C4ABBB100>
           │    └ <ProactorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x0000026C48C55ED0>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 640, in run_until_complete
    self.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x0000026C4AC7AF20>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x0000026C4ABBCEA0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1919, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x0000026C4AB06660>
    └ <Handle Task.task_wakeup(<Future finished result=True>)>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=True>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=True>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=True>)>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 308, in _process_update
    response = await self.feed_update(bot, update, **kwargs)
                     │    │           │    │         └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,)}
                     │    │           │    └ Update(update_id=543873776, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                     │    │           └ <aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>
                     │    └ <function Dispatcher.feed_update at 0x0000026C4F8E9440>
                     └ <Dispatcher '0x26c50a3bad0'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 157, in feed_update
    response = await self.update.wrap_outer_middleware(
                     │    │      └ <function TelegramEventObserver.wrap_outer_middleware at 0x0000026C4F8C3E20>
                     │    └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x0000026C50A3F1D0>
                     └ <Dispatcher '0x26c50a3bad0'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\middlewares\error.py", line 25, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873776, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ functools.partial(<aiogram.dispatcher.middlewares.user_context.UserContextMiddleware object at 0x0000026C50A3F890>, functools...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\middlewares\user_context.py", line 27, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873776, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ functools.partial(<aiogram.fsm.middleware.FSMContextMiddleware object at 0x0000026C50A3F910>, <function TelegramEventObserver...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\fsm\middleware.py", line 41, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873776, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ <function TelegramEventObserver.trigger at 0x0000026C50A2E7A0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\telegram.py", line 120, in trigger
    return await wrapped_inner(event, kwargs)
                 │             │      └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │             └ Update(update_id=543873776, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ <function CallableMixin.call at 0x0000026C50A2F4C0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\handler.py", line 42, in call
    return await wrapped()
                 └ functools.partial(<bound method Dispatcher._listen_update of <Dispatcher '0x26c50a3bad0'>>, Update(update_id=543873776, messa...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 275, in _listen_update
    return await self.propagate_event(update_type=update_type, event=event, **kwargs)
                 │    │                           │                  │        └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │    │                           │                  └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │    │                           └ 'callback_query'
                 │    └ <function Router.propagate_event at 0x0000026C4F8E8A40>
                 └ <Dispatcher '0x26c50a3bad0'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 116, in propagate_event
    return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
                 │        │                     │               │           └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │        │                     │               └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │        │                     └ <function Router.propagate_event.<locals>._wrapped at 0x0000026C50A2E980>
                 │        └ <function TelegramEventObserver.wrap_outer_middleware at 0x0000026C4F8C3E20>
                 └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x0000026C50A3D1D0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 111, in _wrapped
    return await self._propagate_event(
                 │    └ <function Router._propagate_event at 0x0000026C4F8E8AE0>
                 └ <Dispatcher '0x26c50a3bad0'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 144, in _propagate_event
    response = await router.propagate_event(update_type=update_type, event=event, **kwargs)
                     │      │                           │                  │        └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                     │      │                           │                  └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                     │      │                           └ 'callback_query'
                     │      └ <function Router.propagate_event at 0x0000026C4F8E8A40>
                     └ <Router '0x26c4f9aed90'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 116, in propagate_event
    return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
                 │        │                     │               │           └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │        │                     │               └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │        │                     └ <function Router.propagate_event.<locals>._wrapped at 0x0000026C50A51F80>
                 │        └ <function TelegramEventObserver.wrap_outer_middleware at 0x0000026C4F8C3E20>
                 └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x0000026C508BCFD0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 111, in _wrapped
    return await self._propagate_event(
                 │    └ <function Router._propagate_event at 0x0000026C4F8E8AE0>
                 └ <Router '0x26c4f9aed90'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 136, in _propagate_event
    response = await observer.trigger(event, **kwargs)
                     │        │       │        └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                     │        │       └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                     │        └ <function TelegramEventObserver.trigger at 0x0000026C4F8C3F60>
                     └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x0000026C508BCFD0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\telegram.py", line 120, in trigger
    return await wrapped_inner(event, kwargs)
                 │             │      └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │             └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 └ <function CallableMixin.call at 0x0000026C50A52520>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\handler.py", line 42, in call
    return await wrapped()
                 └ functools.partial(<function groups_settings at 0x0000026C508B6F20>, CallbackQuery(id='1987767170046810495', from_user=User(id...

> File "D:\Work Projects\Neuro_commenting_bot\handlers\groups\groups_settings.py", line 17, in groups_settings
    triggers = await db_get_triggers_for_group()
                     └ <function db_get_triggers_for_group at 0x0000026C4FB0E660>

TypeError: db_get_triggers_for_group() missing 1 required positional argument: 'group_name'
2023-11-02 14:28:35.443 | ERROR    | handlers.groups.groups_settings:groups_settings:18 - An error has been caught in function 'groups_settings', process 'MainProcess' (13304), thread 'MainThread' (15324):
Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\bot.py", line 63, in <module>
    asyncio.run(main())
    │       │   └ <function main at 0x0000026C48C4A160>
    │       └ <function run at 0x0000026C4AB496C0>
    └ <module 'asyncio' from 'C:\\Users\\som30\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\__init__.py'>

  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
           │      │   └ <coroutine object main at 0x0000026C4FAAD9A0>
           │      └ <function Runner.run at 0x0000026C4ABBD620>
           └ <asyncio.runners.Runner object at 0x0000026C48C55ED0>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<main() running at D:\Work Projects\Neuro_commenting_bot\bot.py:57> wait_for=<_GatheringFutu...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x0000026C4ABBB100>
           │    └ <ProactorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x0000026C48C55ED0>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 640, in run_until_complete
    self.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x0000026C4AC7AF20>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x0000026C4ABBCEA0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1919, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x0000026C4AB06660>
    └ <Handle Task.task_wakeup(<Future finished result=True>)>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=True>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=True>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=True>)>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 308, in _process_update
    response = await self.feed_update(bot, update, **kwargs)
                     │    │           │    │         └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,)}
                     │    │           │    └ Update(update_id=543873776, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                     │    │           └ <aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>
                     │    └ <function Dispatcher.feed_update at 0x0000026C4F8E9440>
                     └ <Dispatcher '0x26c50a3bad0'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 157, in feed_update
    response = await self.update.wrap_outer_middleware(
                     │    │      └ <function TelegramEventObserver.wrap_outer_middleware at 0x0000026C4F8C3E20>
                     │    └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x0000026C50A3F1D0>
                     └ <Dispatcher '0x26c50a3bad0'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\middlewares\error.py", line 25, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873776, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ functools.partial(<aiogram.dispatcher.middlewares.user_context.UserContextMiddleware object at 0x0000026C50A3F890>, functools...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\middlewares\user_context.py", line 27, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873776, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ functools.partial(<aiogram.fsm.middleware.FSMContextMiddleware object at 0x0000026C50A3F910>, <function TelegramEventObserver...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\fsm\middleware.py", line 41, in __call__
    return await handler(event, data)
                 │       │      └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │       └ Update(update_id=543873776, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ <function TelegramEventObserver.trigger at 0x0000026C50A2E7A0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\telegram.py", line 120, in trigger
    return await wrapped_inner(event, kwargs)
                 │             │      └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │             └ Update(update_id=543873776, message=None, edited_message=None, channel_post=None, edited_channel_post=None, inline_query=None...
                 └ <function CallableMixin.call at 0x0000026C50A2F4C0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\handler.py", line 42, in call
    return await wrapped()
                 └ functools.partial(<bound method Dispatcher._listen_update of <Dispatcher '0x26c50a3bad0'>>, Update(update_id=543873776, messa...
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 275, in _listen_update
    return await self.propagate_event(update_type=update_type, event=event, **kwargs)
                 │    │                           │                  │        └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │    │                           │                  └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │    │                           └ 'callback_query'
                 │    └ <function Router.propagate_event at 0x0000026C4F8E8A40>
                 └ <Dispatcher '0x26c50a3bad0'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 116, in propagate_event
    return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
                 │        │                     │               │           └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │        │                     │               └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │        │                     └ <function Router.propagate_event.<locals>._wrapped at 0x0000026C50A2E980>
                 │        └ <function TelegramEventObserver.wrap_outer_middleware at 0x0000026C4F8C3E20>
                 └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x0000026C50A3D1D0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 111, in _wrapped
    return await self._propagate_event(
                 │    └ <function Router._propagate_event at 0x0000026C4F8E8AE0>
                 └ <Dispatcher '0x26c50a3bad0'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 144, in _propagate_event
    response = await router.propagate_event(update_type=update_type, event=event, **kwargs)
                     │      │                           │                  │        └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                     │      │                           │                  └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                     │      │                           └ 'callback_query'
                     │      └ <function Router.propagate_event at 0x0000026C4F8E8A40>
                     └ <Router '0x26c4f9aed90'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 116, in propagate_event
    return await observer.wrap_outer_middleware(_wrapped, event=event, data=kwargs)
                 │        │                     │               │           └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │        │                     │               └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 │        │                     └ <function Router.propagate_event.<locals>._wrapped at 0x0000026C50A51F80>
                 │        └ <function TelegramEventObserver.wrap_outer_middleware at 0x0000026C4F8C3E20>
                 └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x0000026C508BCFD0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 111, in _wrapped
    return await self._propagate_event(
                 │    └ <function Router._propagate_event at 0x0000026C4F8E8AE0>
                 └ <Router '0x26c4f9aed90'>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\router.py", line 136, in _propagate_event
    response = await observer.trigger(event, **kwargs)
                     │        │       │        └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                     │        │       └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                     │        └ <function TelegramEventObserver.trigger at 0x0000026C4F8C3F60>
                     └ <aiogram.dispatcher.event.telegram.TelegramEventObserver object at 0x0000026C508BCFD0>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\telegram.py", line 120, in trigger
    return await wrapped_inner(event, kwargs)
                 │             │      └ {'dispatcher': <Dispatcher '0x26c50a3bad0'>, 'bots': (<aiogram.client.bot.Bot object at 0x0000026C4F9CCA50>,), 'bot': <aiogra...
                 │             └ CallbackQuery(id='1987767170046810495', from_user=User(id=462813109, is_bot=False, first_name='Ivan', last_name=None, usernam...
                 └ <function CallableMixin.call at 0x0000026C50A52520>
  File "D:\Work Projects\Neuro_commenting_bot\venv\Lib\site-packages\aiogram\dispatcher\event\handler.py", line 42, in call
    return await wrapped()
                 └ functools.partial(<function groups_settings at 0x0000026C508B6F20>, CallbackQuery(id='1987767170046810495', from_user=User(id...

> File "D:\Work Projects\Neuro_commenting_bot\handlers\groups\groups_settings.py", line 18, in groups_settings
    promts = await db_get_promts_for_group()
                   └ <function db_get_promts_for_group at 0x0000026C4FB0DB20>

TypeError: db_get_promts_for_group() missing 1 required positional argument: 'group_name'
2023-11-02 14:51:38.121 | ERROR    | handlers.groups.add_group:add_group:77 - Telegram server says - Bad Request: chat not found
2023-11-02 14:55:54.961 | ERROR    | handlers.groups.add_group:add_group:90 - Telegram server says - Bad Request: chat not found
2023-11-02 15:07:39.504 | ERROR    | data.config_telethon_scheme:send_comments:271 - Error sending comments: Bot.send_message() missing 1 required positional argument: 'text'
2023-11-02 15:11:23.853 | ERROR    | data.config_telethon_scheme:send_comments:271 - Error sending comments: Bot.send_message() missing 1 required positional argument: 'chat_id'
2023-11-02 15:24:20.521 | ERROR    | __main__:start_params:47 - An error has been caught in function 'start_params', process 'MainProcess' (3240), thread 'MainThread' (15964):
Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\bot.py", line 63, in <module>
    asyncio.run(main())
    │       │   └ <function main at 0x000002048582A160>
    │       └ <function run at 0x00000204877296C0>
    └ <module 'asyncio' from 'C:\\Users\\som30\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\__init__.py'>

  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
           │      │   └ <coroutine object main at 0x000002048C6AD9A0>
           │      └ <function Runner.run at 0x000002048779D620>
           └ <asyncio.runners.Runner object at 0x000002048C578690>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<main() running at D:\Work Projects\Neuro_commenting_bot\bot.py:57> wait_for=<_GatheringFutu...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x000002048779B100>
           │    └ <ProactorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x000002048C578690>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 640, in run_until_complete
    self.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000002048785AF20>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000002048779CEA0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1919, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x00000204876E6660>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>

> File "D:\Work Projects\Neuro_commenting_bot\bot.py", line 47, in start_params
    await db_start()
          └ <function db_start at 0x000002048C6EF100>

  File "D:\Work Projects\Neuro_commenting_bot\database\db_action.py", line 21, in db_start
    cur.execute("CREATE TABLE IF NOT EXISTS users(user_id INTEGER, user_name TEXT)")
    │   └ <method 'execute' of 'sqlite3.Cursor' objects>
    └ <sqlite3.Cursor object at 0x000002048AE8EE40>

sqlite3.OperationalError: database is locked
2023-11-02 15:35:07.924 | ERROR    | data.config_telethon_scheme:send_comments:273 - Error sending comments: 2 validation errors for SendMessage
chat_id.int
  Input should be a valid integer [type=int_type, input_value=(462813109, 'Jisiehrk'), input_type=tuple]
    For further information visit https://errors.pydantic.dev/2.3/v/int_type
chat_id.str
  Input should be a valid string [type=string_type, input_value=(462813109, 'Jisiehrk'), input_type=tuple]
    For further information visit https://errors.pydantic.dev/2.3/v/string_type
2023-11-02 15:46:40.855 | ERROR    | handlers.get_history:get_history:25 - [Errno 2] No such file or directory: 'history.txt'
2023-11-03 10:47:57.842 | ERROR    | data.chat_gpt:process_question:29 - Request failed 'choices'
2023-11-03 10:47:57.843 | ERROR    | data.config_telethon_scheme:send_comments:273 - Error sending comments: Comment not found
2023-11-03 10:47:58.294 | ERROR    | data.chat_gpt:process_question:29 - Request failed 'choices'
2023-11-03 10:47:58.295 | ERROR    | data.config_telethon_scheme:send_comments:273 - Error sending comments: Comment not found
2023-11-03 12:58:06.865 | ERROR    | data.chat_gpt:process_question:32 - Request failed 
2023-11-03 12:58:06.865 | ERROR    | data.config_telethon_scheme:send_comments:274 - Error sending comments: Comment not found
2023-11-03 13:14:34.550 | ERROR    | data.chat_gpt:process_question:32 - Request failed 'choices'
2023-11-03 13:14:34.550 | ERROR    | data.config_telethon_scheme:send_comments:274 - Error sending comments: Comment not found
2023-11-03 13:14:35.242 | ERROR    | data.chat_gpt:process_question:32 - Request failed 'choices'
2023-11-03 13:14:35.242 | ERROR    | data.config_telethon_scheme:send_comments:274 - Error sending comments: Comment not found
2023-11-03 13:21:20.577 | ERROR    | data.chat_gpt:process_question:32 - Request failed 'choices'
2023-11-03 13:21:20.577 | ERROR    | data.config_telethon_scheme:send_comments:274 - Error sending comments: Comment not found
2023-11-03 13:27:43.403 | ERROR    | data.chat_gpt:process_question:37 - Request failed 'choices'
2023-11-03 13:27:43.403 | ERROR    | data.config_telethon_scheme:send_comments:274 - Error sending comments: Comment not found
2023-11-03 14:01:42.096 | ERROR    | data.config_telethon_scheme:monitor_channels:227 - Error monitoring channels: An asyncio.Future, a coroutine or an awaitable is required
2023-11-03 14:20:57.646 | ERROR    | data.chat_gpt:process_question:39 - Request failed 'choices'
2023-11-03 14:20:57.647 | ERROR    | data.config_telethon_scheme:send_comments:277 - Error sending comments: Comment not found
2023-11-03 14:46:45.533 | ERROR    | data.chat_gpt:process_question:37 - Request failed Ошибка запроса. Сервис недоступен.
2023-11-03 14:46:45.534 | ERROR    | data.config_telethon_scheme:send_comments:277 - Error sending comments: Comment not found
2023-11-03 14:46:45.555 | ERROR    | data.chat_gpt:process_question:37 - Request failed Ошибка запроса. Сервис недоступен.
2023-11-03 14:46:45.556 | ERROR    | data.config_telethon_scheme:send_comments:277 - Error sending comments: Comment not found
2023-11-03 14:51:33.658 | ERROR    | database.db_action:get_groups_and_triggers:374 - Error retrieving groups and triggers from the database: 'NoneType' object has no attribute 'replace'
2023-11-03 15:01:48.650 | ERROR    | handlers.get_history:get_history:25 - Telegram server says - Bad Request: message is too long
2023-11-03 15:16:59.869 | ERROR    | data.chat_gpt:process_question:37 - Request failed 
2023-11-03 15:23:59.858 | ERROR    | data.chat_gpt:process_question:37 - Request failed 
2023-11-03 15:42:55.668 | ERROR    | data.config_telethon_scheme:send_comments:279 - Error sending comments: database is locked
2023-11-03 15:43:01.207 | ERROR    | data.config_telethon_scheme:monitor_channels:227 - Error monitoring channels: database is locked
2023-11-03 15:49:19.625 | ERROR    | data.config_telethon_scheme:send_comments:280 - Error sending comments: database is locked
2023-11-03 15:49:25.267 | ERROR    | data.config_telethon_scheme:monitor_channels:227 - Error monitoring channels: database is locked
2023-11-03 15:49:30.937 | ERROR    | data.config_telethon_scheme:send_comments:280 - Error sending comments: database is locked
2023-11-03 15:54:18.310 | ERROR    | data.config_telethon_scheme:send_comments:280 - Error sending comments: database is locked
2023-11-03 15:54:23.895 | ERROR    | data.config_telethon_scheme:monitor_channels:227 - Error monitoring channels: database is locked
2023-11-03 15:54:29.438 | ERROR    | data.config_telethon_scheme:send_comments:280 - Error sending comments: database is locked
2023-11-03 16:03:22.281 | ERROR    | database.db_action:db_get_promts_for_group:301 - Error retrieving promts for Telegram group from the database: Cannot operate on a closed cursor.
2023-11-03 16:03:22.281 | ERROR    | data.config_telethon_scheme:send_comments:247 - An error has been caught in function 'send_comments', process 'MainProcess' (3896), thread 'MainThread' (2736):
Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\database\db_action.py", line 287, in db_get_promts_for_group
    cur.execute("SELECT promts FROM telegram_groups WHERE group_name=?", (group_name,))
    │   │                                                                 └ '@randchnlss'
    │   └ <method 'execute' of 'sqlite3.Cursor' objects>
    └ <sqlite3.Cursor object at 0x00000202E4C48B40>

sqlite3.ProgrammingError: Cannot operate on a closed cursor.


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\bot.py", line 63, in <module>
    asyncio.run(main())
    │       │   └ <function main at 0x00000202DCF4A160>
    │       └ <function run at 0x00000202DEE496C0>
    └ <module 'asyncio' from 'C:\\Users\\som30\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\__init__.py'>

  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
           │      │   └ <coroutine object main at 0x00000202E4C6BBC0>
           │      └ <function Runner.run at 0x00000202DEEBD620>
           └ <asyncio.runners.Runner object at 0x00000202DCF56550>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<main() running at D:\Work Projects\Neuro_commenting_bot\bot.py:57> wait_for=<_GatheringFutu...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x00000202DEEBB100>
           │    └ <ProactorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x00000202DCF56550>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 640, in run_until_complete
    self.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x00000202DEF7AF20>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x00000202DEEBCEA0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1919, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x00000202DEE06660>
    └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9BE80>()>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9BE80>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9BE80>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9BE80>()>

> File "D:\Work Projects\Neuro_commenting_bot\data\config_telethon_scheme.py", line 247, in send_comments
    promt = await db_get_promts_for_group(channel_name)
                  │                       └ '@randchnlss'
                  └ <function db_get_promts_for_group at 0x00000202E3DFDBC0>

  File "D:\Work Projects\Neuro_commenting_bot\database\db_action.py", line 302, in db_get_promts_for_group
    cur.close()
    │   └ <method 'close' of 'sqlite3.Cursor' objects>
    └ <sqlite3.Cursor object at 0x00000202E4C48B40>

sqlite3.ProgrammingError: Cannot operate on a closed database.
2023-11-03 16:03:22.306 | ERROR    | database.db_action:db_get_all_gpt_accounts:493 - Error retrieving GPT account API keys from the database: Cannot operate on a closed cursor.
2023-11-03 16:03:22.306 | ERROR    | data.config_telethon_scheme:send_comments:248 - An error has been caught in function 'send_comments', process 'MainProcess' (3896), thread 'MainThread' (2736):
Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\database\db_action.py", line 485, in db_get_all_gpt_accounts
    cur.execute("SELECT api_key FROM gpt_accounts")
    │   └ <method 'execute' of 'sqlite3.Cursor' objects>
    └ <sqlite3.Cursor object at 0x00000202E4C48B40>

sqlite3.ProgrammingError: Cannot operate on a closed cursor.


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\bot.py", line 63, in <module>
    asyncio.run(main())
    │       │   └ <function main at 0x00000202DCF4A160>
    │       └ <function run at 0x00000202DEE496C0>
    └ <module 'asyncio' from 'C:\\Users\\som30\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\__init__.py'>

  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
           │      │   └ <coroutine object main at 0x00000202E4C6BBC0>
           │      └ <function Runner.run at 0x00000202DEEBD620>
           └ <asyncio.runners.Runner object at 0x00000202DCF56550>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<main() running at D:\Work Projects\Neuro_commenting_bot\bot.py:57> wait_for=<_GatheringFutu...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x00000202DEEBB100>
           │    └ <ProactorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x00000202DCF56550>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 640, in run_until_complete
    self.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x00000202DEF7AF20>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x00000202DEEBCEA0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1919, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x00000202DEE06660>
    └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9BE80>()>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9BE80>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9BE80>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9BE80>()>

> File "D:\Work Projects\Neuro_commenting_bot\data\config_telethon_scheme.py", line 248, in send_comments
    gpt_api = random.choice(await db_get_all_gpt_accounts())
              │      │            └ <function db_get_all_gpt_accounts at 0x00000202E3DFF9C0>
              │      └ <bound method Random.choice of <random.Random object at 0x00000202DD4D15B0>>
              └ <module 'random' from 'C:\\Users\\som30\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\random.py'>

  File "D:\Work Projects\Neuro_commenting_bot\database\db_action.py", line 494, in db_get_all_gpt_accounts
    cur.close()
    │   └ <method 'close' of 'sqlite3.Cursor' objects>
    └ <sqlite3.Cursor object at 0x00000202E4C48B40>

sqlite3.ProgrammingError: Cannot operate on a closed database.
2023-11-03 16:03:22.320 | ERROR    | data.config_telethon_scheme:send_comments:281 - Error sending comments: Cannot choose from an empty sequence
2023-11-03 16:03:22.321 | ERROR    | database.db_action:db_get_promts_for_group:301 - Error retrieving promts for Telegram group from the database: Cannot operate on a closed cursor.
2023-11-03 16:03:22.321 | ERROR    | data.config_telethon_scheme:send_comments:247 - An error has been caught in function 'send_comments', process 'MainProcess' (3896), thread 'MainThread' (2736):
Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\database\db_action.py", line 287, in db_get_promts_for_group
    cur.execute("SELECT promts FROM telegram_groups WHERE group_name=?", (group_name,))
    │   │                                                                 └ '@rndcas2'
    │   └ <method 'execute' of 'sqlite3.Cursor' objects>
    └ <sqlite3.Cursor object at 0x00000202E4C48B40>

sqlite3.ProgrammingError: Cannot operate on a closed cursor.


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\bot.py", line 63, in <module>
    asyncio.run(main())
    │       │   └ <function main at 0x00000202DCF4A160>
    │       └ <function run at 0x00000202DEE496C0>
    └ <module 'asyncio' from 'C:\\Users\\som30\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\__init__.py'>

  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
           │      │   └ <coroutine object main at 0x00000202E4C6BBC0>
           │      └ <function Runner.run at 0x00000202DEEBD620>
           └ <asyncio.runners.Runner object at 0x00000202DCF56550>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<main() running at D:\Work Projects\Neuro_commenting_bot\bot.py:57> wait_for=<_GatheringFutu...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x00000202DEEBB100>
           │    └ <ProactorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x00000202DCF56550>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 640, in run_until_complete
    self.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x00000202DEF7AF20>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x00000202DEEBCEA0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1919, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x00000202DEE06660>
    └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9A5C0>()>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9A5C0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9A5C0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9A5C0>()>

> File "D:\Work Projects\Neuro_commenting_bot\data\config_telethon_scheme.py", line 247, in send_comments
    promt = await db_get_promts_for_group(channel_name)
                  │                       └ '@rndcas2'
                  └ <function db_get_promts_for_group at 0x00000202E3DFDBC0>

  File "D:\Work Projects\Neuro_commenting_bot\database\db_action.py", line 302, in db_get_promts_for_group
    cur.close()
    │   └ <method 'close' of 'sqlite3.Cursor' objects>
    └ <sqlite3.Cursor object at 0x00000202E4C48B40>

sqlite3.ProgrammingError: Cannot operate on a closed database.
2023-11-03 16:03:22.336 | ERROR    | database.db_action:db_get_all_gpt_accounts:493 - Error retrieving GPT account API keys from the database: Cannot operate on a closed cursor.
2023-11-03 16:03:22.336 | ERROR    | data.config_telethon_scheme:send_comments:248 - An error has been caught in function 'send_comments', process 'MainProcess' (3896), thread 'MainThread' (2736):
Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\database\db_action.py", line 485, in db_get_all_gpt_accounts
    cur.execute("SELECT api_key FROM gpt_accounts")
    │   └ <method 'execute' of 'sqlite3.Cursor' objects>
    └ <sqlite3.Cursor object at 0x00000202E4C48B40>

sqlite3.ProgrammingError: Cannot operate on a closed cursor.


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\bot.py", line 63, in <module>
    asyncio.run(main())
    │       │   └ <function main at 0x00000202DCF4A160>
    │       └ <function run at 0x00000202DEE496C0>
    └ <module 'asyncio' from 'C:\\Users\\som30\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\__init__.py'>

  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
           │      │   └ <coroutine object main at 0x00000202E4C6BBC0>
           │      └ <function Runner.run at 0x00000202DEEBD620>
           └ <asyncio.runners.Runner object at 0x00000202DCF56550>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<main() running at D:\Work Projects\Neuro_commenting_bot\bot.py:57> wait_for=<_GatheringFutu...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x00000202DEEBB100>
           │    └ <ProactorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x00000202DCF56550>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 640, in run_until_complete
    self.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x00000202DEF7AF20>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x00000202DEEBCEA0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1919, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x00000202DEE06660>
    └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9A5C0>()>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9A5C0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9A5C0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9A5C0>()>

> File "D:\Work Projects\Neuro_commenting_bot\data\config_telethon_scheme.py", line 248, in send_comments
    gpt_api = random.choice(await db_get_all_gpt_accounts())
              │      │            └ <function db_get_all_gpt_accounts at 0x00000202E3DFF9C0>
              │      └ <bound method Random.choice of <random.Random object at 0x00000202DD4D15B0>>
              └ <module 'random' from 'C:\\Users\\som30\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\random.py'>

  File "D:\Work Projects\Neuro_commenting_bot\database\db_action.py", line 494, in db_get_all_gpt_accounts
    cur.close()
    │   └ <method 'close' of 'sqlite3.Cursor' objects>
    └ <sqlite3.Cursor object at 0x00000202E4C48B40>

sqlite3.ProgrammingError: Cannot operate on a closed database.
2023-11-03 16:03:22.351 | ERROR    | data.config_telethon_scheme:send_comments:281 - Error sending comments: Cannot choose from an empty sequence
2023-11-03 16:03:22.352 | ERROR    | database.db_action:db_get_promts_for_group:301 - Error retrieving promts for Telegram group from the database: Cannot operate on a closed cursor.
2023-11-03 16:03:22.352 | ERROR    | data.config_telethon_scheme:send_comments:247 - An error has been caught in function 'send_comments', process 'MainProcess' (3896), thread 'MainThread' (2736):
Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\database\db_action.py", line 287, in db_get_promts_for_group
    cur.execute("SELECT promts FROM telegram_groups WHERE group_name=?", (group_name,))
    │   │                                                                 └ '@chnl3test'
    │   └ <method 'execute' of 'sqlite3.Cursor' objects>
    └ <sqlite3.Cursor object at 0x00000202E4C48B40>

sqlite3.ProgrammingError: Cannot operate on a closed cursor.


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\bot.py", line 63, in <module>
    asyncio.run(main())
    │       │   └ <function main at 0x00000202DCF4A160>
    │       └ <function run at 0x00000202DEE496C0>
    └ <module 'asyncio' from 'C:\\Users\\som30\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\__init__.py'>

  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
           │      │   └ <coroutine object main at 0x00000202E4C6BBC0>
           │      └ <function Runner.run at 0x00000202DEEBD620>
           └ <asyncio.runners.Runner object at 0x00000202DCF56550>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<main() running at D:\Work Projects\Neuro_commenting_bot\bot.py:57> wait_for=<_GatheringFutu...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x00000202DEEBB100>
           │    └ <ProactorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x00000202DCF56550>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 640, in run_until_complete
    self.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x00000202DEF7AF20>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x00000202DEEBCEA0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1919, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x00000202DEE06660>
    └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9B670>()>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9B670>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9B670>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9B670>()>

> File "D:\Work Projects\Neuro_commenting_bot\data\config_telethon_scheme.py", line 247, in send_comments
    promt = await db_get_promts_for_group(channel_name)
                  │                       └ '@chnl3test'
                  └ <function db_get_promts_for_group at 0x00000202E3DFDBC0>

  File "D:\Work Projects\Neuro_commenting_bot\database\db_action.py", line 302, in db_get_promts_for_group
    cur.close()
    │   └ <method 'close' of 'sqlite3.Cursor' objects>
    └ <sqlite3.Cursor object at 0x00000202E4C48B40>

sqlite3.ProgrammingError: Cannot operate on a closed database.
2023-11-03 16:03:22.366 | ERROR    | database.db_action:db_get_all_gpt_accounts:493 - Error retrieving GPT account API keys from the database: Cannot operate on a closed cursor.
2023-11-03 16:03:22.366 | ERROR    | data.config_telethon_scheme:send_comments:248 - An error has been caught in function 'send_comments', process 'MainProcess' (3896), thread 'MainThread' (2736):
Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\database\db_action.py", line 485, in db_get_all_gpt_accounts
    cur.execute("SELECT api_key FROM gpt_accounts")
    │   └ <method 'execute' of 'sqlite3.Cursor' objects>
    └ <sqlite3.Cursor object at 0x00000202E4C48B40>

sqlite3.ProgrammingError: Cannot operate on a closed cursor.


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "D:\Work Projects\Neuro_commenting_bot\bot.py", line 63, in <module>
    asyncio.run(main())
    │       │   └ <function main at 0x00000202DCF4A160>
    │       └ <function run at 0x00000202DEE496C0>
    └ <module 'asyncio' from 'C:\\Users\\som30\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\__init__.py'>

  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
           │      │   └ <coroutine object main at 0x00000202E4C6BBC0>
           │      └ <function Runner.run at 0x00000202DEEBD620>
           └ <asyncio.runners.Runner object at 0x00000202DCF56550>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<main() running at D:\Work Projects\Neuro_commenting_bot\bot.py:57> wait_for=<_GatheringFutu...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x00000202DEEBB100>
           │    └ <ProactorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x00000202DCF56550>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 640, in run_until_complete
    self.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x00000202DEF7AF20>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x00000202DEEBCEA0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 1919, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x00000202DEE06660>
    └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9B670>()>
  File "C:\Users\som30\AppData\Local\Programs\Python\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9B670>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9B670>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <TaskStepMethWrapper object at 0x00000202E4D9B670>()>

> File "D:\Work Projects\Neuro_commenting_bot\data\config_telethon_scheme.py", line 248, in send_comments
    gpt_api = random.choice(await db_get_all_gpt_accounts())
              │      │            └ <function db_get_all_gpt_accounts at 0x00000202E3DFF9C0>
              │      └ <bound method Random.choice of <random.Random object at 0x00000202DD4D15B0>>
              └ <module 'random' from 'C:\\Users\\som30\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\random.py'>

  File "D:\Work Projects\Neuro_commenting_bot\database\db_action.py", line 494, in db_get_all_gpt_accounts
    cur.close()
    │   └ <method 'close' of 'sqlite3.Cursor' objects>
    └ <sqlite3.Cursor object at 0x00000202E4C48B40>

sqlite3.ProgrammingError: Cannot operate on a closed database.
2023-11-03 16:03:22.381 | ERROR    | data.config_telethon_scheme:send_comments:281 - Error sending comments: Cannot choose from an empty sequence
2023-11-03 16:07:02.009 | ERROR    | database.db_action:db_get_promts_for_group:263 - Error retrieving promts for Telegram group from the database: Cannot operate on a closed cursor.
2023-11-03 16:07:02.009 | ERROR    | database.db_action:db_get_all_gpt_accounts:422 - Error retrieving GPT account API keys from the database: Cannot operate on a closed cursor.
2023-11-03 16:07:02.010 | ERROR    | data.config_telethon_scheme:send_comments:281 - Error sending comments: Cannot choose from an empty sequence
2023-11-03 16:07:02.010 | ERROR    | database.db_action:db_get_promts_for_group:263 - Error retrieving promts for Telegram group from the database: Cannot operate on a closed cursor.
2023-11-03 16:07:02.010 | ERROR    | database.db_action:db_get_all_gpt_accounts:422 - Error retrieving GPT account API keys from the database: Cannot operate on a closed cursor.
2023-11-03 16:07:02.010 | ERROR    | data.config_telethon_scheme:send_comments:281 - Error sending comments: Cannot choose from an empty sequence
2023-11-03 16:07:02.010 | ERROR    | database.db_action:db_get_promts_for_group:263 - Error retrieving promts for Telegram group from the database: Cannot operate on a closed cursor.
2023-11-03 16:07:02.010 | ERROR    | database.db_action:db_get_all_gpt_accounts:422 - Error retrieving GPT account API keys from the database: Cannot operate on a closed cursor.
2023-11-03 16:07:02.010 | ERROR    | data.config_telethon_scheme:send_comments:281 - Error sending comments: Cannot choose from an empty sequence
2023-11-03 16:07:58.207 | ERROR    | database.db_action:db_get_all_telegram_groups:209 - Error retrieving Telegram groups from the database: Cannot operate on a closed cursor.
2023-11-03 16:08:21.661 | ERROR    | database.db_action:db_get_all_telegram_groups:209 - Error retrieving Telegram groups from the database: Cannot operate on a closed cursor.
2023-11-03 16:11:28.021 | ERROR    | data.config_telethon_scheme:send_comments:281 - Error sending comments: database is locked
2023-11-03 16:11:33.575 | ERROR    | data.config_telethon_scheme:monitor_channels:227 - Error monitoring channels: database is locked
2023-11-03 16:14:10.189 | ERROR    | database.db_action:db_get_promts_for_group:261 - Error retrieving prompts for Telegram group from the database: no such column: prompts
2023-11-03 16:14:10.190 | ERROR    | database.db_action:db_get_promts_for_group:261 - Error retrieving prompts for Telegram group from the database: no such column: prompts
2023-11-03 16:14:10.190 | ERROR    | database.db_action:db_get_promts_for_group:261 - Error retrieving prompts for Telegram group from the database: no such column: prompts
2023-11-03 16:14:10.190 | ERROR    | database.db_action:db_get_promts_for_group:261 - Error retrieving prompts for Telegram group from the database: no such column: prompts
2023-11-03 16:57:41.848 | ERROR    | data.chat_gpt:process_question:36 - Request failed 
2023-11-04 14:21:35.288 | ERROR    | data.chat_gpt:send_request:79 - 407, message='Proxy Authentication Required', url=URL('http://sp60:mVDNpvc1m@cz.smartproxy.com:26000')
2023-11-04 14:21:35.290 | ERROR    | data.chat_gpt:send_request:79 - 407, message='Proxy Authentication Required', url=URL('http://sp60:mVDNpvc1m@cz.smartproxy.com:26000')
2023-11-04 14:24:28.256 | ERROR    | data.chat_gpt:send_request:79 - 'choices'
2023-11-04 14:24:49.280 | ERROR    | data.chat_gpt:send_request:79 - 'choices'
2023-11-04 14:25:10.328 | ERROR    | data.chat_gpt:send_request:79 - 'choices'
2023-11-04 14:28:29.868 | ERROR    | data.chat_gpt:send_request:79 - 
2023-11-04 14:36:25.426 | ERROR    | data.chat_gpt:process_question:52 - Request failed Passing coroutines is forbidden, use tasks explicitly.
2023-11-04 14:36:25.460 | ERROR    | data.chat_gpt:process_question:52 - Request failed Passing coroutines is forbidden, use tasks explicitly.
2023-11-04 14:36:25.460 | ERROR    | data.chat_gpt:process_question:52 - Request failed Passing coroutines is forbidden, use tasks explicitly.
2023-11-04 14:36:25.461 | ERROR    | data.chat_gpt:process_question:52 - Request failed Passing coroutines is forbidden, use tasks explicitly.
2023-11-04 14:36:25.461 | ERROR    | data.chat_gpt:process_question:52 - Request failed Passing coroutines is forbidden, use tasks explicitly.
2023-11-04 14:36:25.462 | ERROR    | data.chat_gpt:process_question:52 - Request failed Passing coroutines is forbidden, use tasks explicitly.
2023-11-04 14:36:25.462 | ERROR    | data.chat_gpt:process_question:52 - Request failed Passing coroutines is forbidden, use tasks explicitly.
2023-11-04 14:36:25.463 | ERROR    | data.config_telethon_scheme:send_comments:281 - Error sending comments: RetryError[<Future at 0x1afb53e7b50 state=finished raised TypeError>]
2023-11-04 14:36:25.463 | ERROR    | data.chat_gpt:process_question:52 - Request failed Passing coroutines is forbidden, use tasks explicitly.
2023-11-04 14:36:25.463 | ERROR    | data.config_telethon_scheme:send_comments:281 - Error sending comments: RetryError[<Future at 0x1afb53d8510 state=finished raised TypeError>]
2023-11-04 14:36:25.463 | ERROR    | data.chat_gpt:process_question:52 - Request failed Passing coroutines is forbidden, use tasks explicitly.
2023-11-04 14:36:25.463 | ERROR    | data.config_telethon_scheme:send_comments:281 - Error sending comments: RetryError[<Future at 0x1afb53d9490 state=finished raised TypeError>]
2023-11-05 13:21:37.826 | ERROR    | data.config_telethon_scheme:send_comments:283 - Error sending comments: Comment not found
2023-11-05 13:22:38.222 | ERROR    | data.chat_gpt:send_request:82 - 'choices'
2023-11-05 13:22:38.246 | ERROR    | data.chat_gpt:send_request:82 - 'choices'
2023-11-05 13:22:59.056 | ERROR    | data.chat_gpt:send_request:82 - 'choices'
2023-11-05 13:22:59.132 | ERROR    | data.chat_gpt:send_request:82 - 'choices'
2023-11-05 13:27:23.415 | ERROR    | data.config_telethon_scheme:send_comments:283 - Error sending comments: Comment not found
2023-11-05 13:27:23.506 | ERROR    | data.config_telethon_scheme:send_comments:283 - Error sending comments: Comment not found
2023-11-05 13:27:23.536 | ERROR    | data.config_telethon_scheme:send_comments:283 - Error sending comments: Comment not found
2023-11-05 13:51:40.300 | ERROR    | database.db_action:get_groups_and_triggers:379 - Error retrieving groups and triggers from the database: 'NoneType' object has no attribute 'replace'
2023-11-05 13:51:50.170 | ERROR    | data.chat_gpt:send_request:82 - 'choices'
2023-11-05 13:51:50.313 | ERROR    | data.chat_gpt:send_request:82 - 'choices'
2023-11-05 13:52:11.337 | ERROR    | data.chat_gpt:send_request:82 - 'choices'
2023-11-05 13:52:11.839 | ERROR    | data.chat_gpt:send_request:82 - 'choices'
2023-11-05 13:52:32.293 | ERROR    | data.chat_gpt:send_request:82 - 'choices'
2023-11-05 13:52:32.902 | ERROR    | data.chat_gpt:send_request:82 - 'choices'
2023-11-05 13:54:13.513 | ERROR    | database.db_action:get_groups_and_triggers:379 - Error retrieving groups and triggers from the database: 'NoneType' object has no attribute 'replace'
2023-11-05 13:57:32.885 | ERROR    | data.chat_gpt:send_request:82 - Server disconnected
2023-11-05 14:02:10.553 | ERROR    | data.config_telethon_scheme:monitor_channels:228 - Error monitoring channels: database is locked
2023-11-05 14:02:31.178 | ERROR    | data.config_telethon_scheme:send_comments:283 - Error sending comments: The key is not registered in the system (caused by ResolveUsernameRequest)
2023-11-05 14:45:40.088 | ERROR    | data.config_telethon_scheme:send_comments:283 - Error sending comments: database is locked
2023-11-05 14:45:45.646 | ERROR    | data.config_telethon_scheme:monitor_channels:228 - Error monitoring channels: database is locked
2023-11-13 19:47:40.038 | ERROR    | data.chat_gpt:send_request:82 - 
2023-11-14 00:03:01.108 | ERROR    | database.db_action:fetch_all:50 - Error while fetching all
2023-11-14 00:03:01.109 | ERROR    | database.db_action:db_get_all_telegram_groups:277 - Error retrieving Telegram groups from the database: 'NoneType' object is not iterable
2023-11-14 00:04:17.242 | ERROR    | database.db_action:fetch_all:50 - Error while fetching all
2023-11-14 00:04:17.242 | ERROR    | database.db_action:db_get_all_telegram_groups:277 - Error retrieving Telegram groups from the database: 'NoneType' object is not iterable
2023-11-14 00:22:34.038 | ERROR    | database.db_action:get_user_info:544 - Error while retrieving user info
2023-11-14 00:24:07.042 | ERROR    | database.db_action:get_user_info:544 - Error while retrieving user info
2023-11-14 00:25:13.797 | ERROR    | handlers.get_history:get_history:26 - [Errno 2] No such file or directory: 'history.txt'
2023-11-14 00:25:46.172 | ERROR    | handlers.users.users_handlers:user_add_to_db:55 - not enough values to unpack (expected 2, got 1)
2023-11-14 00:25:50.532 | ERROR    | handlers.users.users_handlers:user_add_to_db:55 - not enough values to unpack (expected 2, got 1)
2023-11-14 00:33:25.502 | ERROR    | handlers.users.users_handlers:user_add_to_db:55 - not enough values to unpack (expected 2, got 1)
2023-11-14 00:33:28.161 | ERROR    | handlers.users.users_handlers:user_add_to_db:55 - not enough values to unpack (expected 2, got 1)
2023-11-14 00:33:32.186 | ERROR    | handlers.users.users_handlers:user_add_to_db:55 - not enough values to unpack (expected 2, got 1)
2023-11-14 00:35:17.895 | ERROR    | handlers.users.users_handlers:user_add_to_db:71 - not enough values to unpack (expected 2, got 1)
2023-11-14 00:53:55.453 | ERROR    | handlers.users.users_handlers:user_add_to_db:71 - not enough values to unpack (expected 2, got 1)
2023-11-14 00:54:00.431 | ERROR    | handlers.get_history:get_history:26 - [Errno 2] No such file or directory: 'history.txt'
2023-11-14 01:12:10.527 | ERROR    | database.db_action:fetch_all:50 - Error while fetching all
2023-11-14 01:12:10.528 | ERROR    | database.db_action:get_groups_and_triggers:471 - Error retrieving groups and triggers from the database: 'NoneType' object is not iterable
2023-11-14 01:23:56.923 | ERROR    | database.db_action:fetch_all:50 - Error while fetching all
2023-11-14 01:23:56.923 | ERROR    | database.db_action:db_get_all_telegram_groups:299 - Error retrieving Telegram groups from the database: 'NoneType' object is not iterable
2023-11-14 01:24:00.385 | ERROR    | database.db_action:fetch_all:50 - Error while fetching all
2023-11-14 01:24:00.385 | ERROR    | database.db_action:db_get_all_telegram_groups:299 - Error retrieving Telegram groups from the database: 'NoneType' object is not iterable
2023-11-14 01:24:00.799 | ERROR    | database.db_action:fetch_all:50 - Error while fetching all
2023-11-14 01:24:00.800 | ERROR    | database.db_action:db_get_all_telegram_ids:316 - Error retrieving Telegram id's from the database: 'NoneType' object is not iterable
2023-11-14 01:34:17.990 | ERROR    | database.db_action:fetch_all:50 - Error while fetching all
2023-11-14 01:34:17.991 | ERROR    | database.db_action:get_groups_and_triggers:472 - Error retrieving channels and triggers from the database: 'NoneType' object is not iterable
2023-11-14 01:37:01.989 | ERROR    | database.db_action:fetch_all:50 - Error while fetching all
2023-11-14 01:37:01.989 | ERROR    | database.db_action:get_groups_and_triggers:472 - Error retrieving channels and triggers from the database: 'NoneType' object is not iterable
2023-11-14 01:38:22.900 | ERROR    | database.db_action:fetch_all:50 - Error while fetching all
2023-11-14 01:38:22.900 | ERROR    | database.db_action:get_groups_and_triggers:472 - Error retrieving channels and triggers from the database: 'NoneType' object is not iterable
2023-11-14 01:38:22.905 | ERROR    | handlers.monitoring:monitoring_start:17 - В таблице нет групп для мониторинга.
2023-11-14 01:40:13.802 | ERROR    | database.db_action:fetch_all:50 - Error while fetching all
2023-11-14 01:40:13.802 | ERROR    | database.db_action:db_get_all_telegram_groups:300 - Error retrieving Telegram groups from the database: 'NoneType' object is not iterable
2023-11-14 01:40:34.037 | ERROR    | database.db_action:fetch_all:50 - Error while fetching all
2023-11-14 01:40:34.037 | ERROR    | database.db_action:db_get_all_telegram_grp_id:334 - Error retrieving Telegram groups from the database: 'NoneType' object is not iterable
2023-11-14 01:43:17.090 | ERROR    | database.db_action:fetch_all:50 - Error while fetching all
2023-11-14 01:43:17.090 | ERROR    | database.db_action:db_get_all_telegram_groups:300 - Error retrieving Telegram groups from the database: 'NoneType' object is not iterable
2023-11-14 01:43:17.400 | ERROR    | database.db_action:fetch_all:50 - Error while fetching all
2023-11-14 01:43:17.401 | ERROR    | database.db_action:db_get_all_telegram_ids:317 - Error retrieving Telegram id's from the database: 'NoneType' object is not iterable
2023-11-14 01:43:25.142 | ERROR    | database.db_action:fetch_all:50 - Error while fetching all
2023-11-14 01:43:25.144 | ERROR    | database.db_action:db_get_all_telegram_grp_id:334 - Error retrieving Telegram groups from the database: 'NoneType' object is not iterable
2023-11-14 01:43:46.077 | ERROR    | database.db_action:fetch_all:50 - Error while fetching all
2023-11-14 01:43:46.078 | ERROR    | database.db_action:db_get_all_telegram_groups:300 - Error retrieving Telegram groups from the database: 'NoneType' object is not iterable
2023-11-14 01:43:46.494 | ERROR    | database.db_action:fetch_all:50 - Error while fetching all
2023-11-14 01:43:46.494 | ERROR    | database.db_action:db_get_all_telegram_ids:317 - Error retrieving Telegram id's from the database: 'NoneType' object is not iterable
2023-11-14 01:43:52.896 | ERROR    | database.db_action:fetch_all:50 - Error while fetching all
2023-11-14 01:43:52.896 | ERROR    | database.db_action:db_get_all_telegram_grp_id:334 - Error retrieving Telegram groups from the database: 'NoneType' object is not iterable
2023-11-14 01:48:10.810 | ERROR    | database.db_action:fetch_all:50 - Error while fetching all
2023-11-14 01:48:10.811 | ERROR    | database.db_action:db_get_all_telegram_grp_id:334 - Error retrieving Telegram channels from the database: 'NoneType' object is not iterable
2023-11-14 01:56:19.110 | ERROR    | data.chat_gpt:send_request:82 - 'choices'
2023-11-14 01:56:40.049 | ERROR    | data.chat_gpt:send_request:82 - 'choices'
2023-11-14 01:57:00.955 | ERROR    | data.chat_gpt:send_request:82 - 'choices'
2023-11-14 18:33:48.164 | ERROR    | handlers.get_history:get_history:26 - [Errno 2] No such file or directory: 'history.txt'
2023-11-14 19:34:12.032 | ERROR    | database.db_action:fetch_all:50 - Error while fetching all
2023-11-14 19:34:12.033 | ERROR    | database.db_action:get_groups_and_triggers:472 - Error retrieving channels and triggers from the database: 'NoneType' object is not iterable
2023-11-14 19:34:12.038 | ERROR    | handlers.monitoring:monitoring_start:26 - В таблице нет каналов для мониторинга.
2023-11-14 22:49:07.569 | ERROR    | database.db_action:get_user_groups_and_triggers:494 - Error retrieving channels and triggers from the database for user_id: 462813109: 'NoneType' object has no attribute 'replace'
2023-11-14 22:49:08.960 | ERROR    | data.config_telethon_scheme:monitor_channels:246 - Error monitoring channels: 'list' object has no attribute 'items'
2023-11-14 22:54:25.436 | ERROR    | data.config_telethon_scheme:monitor_channels:247 - Error monitoring channels: 'list' object has no attribute 'items'
2023-11-14 23:17:37.675 | ERROR    | data.config_telethon_scheme:monitor_channels:257 - Error monitoring channels: 'list' object has no attribute 'items'
2023-11-14 23:17:56.854 | ERROR    | data.config_telethon_scheme:monitor_channels:257 - Error monitoring channels: 'list' object has no attribute 'items'
2023-11-15 00:08:24.278 | ERROR    | data.config_telethon_scheme:send_comments:317 - Error sending comments: database is locked
2023-11-15 00:08:29.818 | ERROR    | data.config_telethon_scheme:monitor_channels:258 - Error monitoring channels: database is locked
2023-11-15 00:30:05.509 | ERROR    | data.config_telethon_scheme:send_comments:317 - Error sending comments: database is locked
2023-11-15 00:30:11.037 | ERROR    | data.config_telethon_scheme:monitor_channels:258 - Error monitoring channels: database is locked
2023-11-15 00:37:35.446 | ERROR    | database.db_action:fetch_all:55 - Error while fetching all
2023-11-15 00:37:35.448 | ERROR    | database.db_action:db_get_all_gpt_accounts:544 - Error retrieving GPT account API keys from the database: 'NoneType' object is not iterable
2023-11-15 00:37:35.448 | ERROR    | database.db_action:fetch_all:55 - Error while fetching all
2023-11-15 00:37:35.448 | ERROR    | database.db_action:db_get_all_gpt_accounts:544 - Error retrieving GPT account API keys from the database: 'NoneType' object is not iterable
2023-11-15 00:37:35.449 | ERROR    | data.config_telethon_scheme:send_comments:316 - Error sending comments: Cannot choose from an empty sequence
2023-11-15 00:37:35.450 | ERROR    | data.config_telethon_scheme:send_comments:316 - Error sending comments: Cannot choose from an empty sequence
2023-11-15 00:50:27.757 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-15 00:50:27.757 | ERROR    | database.db_action:db_get_all_gpt_accounts:553 - Error retrieving GPT account API keys from the database: 'NoneType' object is not iterable
2023-11-15 00:50:27.758 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-15 00:50:27.758 | ERROR    | database.db_action:db_get_all_gpt_accounts:553 - Error retrieving GPT account API keys from the database: 'NoneType' object is not iterable
2023-11-15 00:50:27.758 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-15 00:50:27.758 | ERROR    | database.db_action:db_get_all_gpt_accounts:553 - Error retrieving GPT account API keys from the database: 'NoneType' object is not iterable
2023-11-15 00:50:27.759 | ERROR    | data.config_telethon_scheme:send_comments:316 - Error sending comments: Cannot choose from an empty sequence
2023-11-15 00:50:27.759 | ERROR    | data.config_telethon_scheme:send_comments:316 - Error sending comments: Cannot choose from an empty sequence
2023-11-15 00:50:27.763 | ERROR    | data.config_telethon_scheme:send_comments:316 - Error sending comments: Cannot choose from an empty sequence
2023-11-15 01:02:43.379 | ERROR    | data.config_telethon_scheme:send_comments:316 - Error sending comments: Comment not found
2023-11-15 01:05:50.642 | ERROR    | data.config_telethon_scheme:send_comments:316 - Error sending comments: database is locked
2023-11-15 01:05:56.190 | ERROR    | data.config_telethon_scheme:monitor_channels:256 - Error monitoring channels: database is locked
2023-11-15 01:06:01.733 | ERROR    | data.config_telethon_scheme:send_comments:316 - Error sending comments: database is locked
2023-11-15 01:15:08.611 | ERROR    | data.config_telethon_scheme:handle_error:325 - Error sending comments: database is locked
2023-11-15 01:15:19.657 | ERROR    | data.config_telethon_scheme:monitor_channels:256 - Error monitoring channels: database is locked
2023-11-15 01:15:25.182 | ERROR    | data.config_telethon_scheme:handle_error:325 - Error sending comments: database is locked
2023-11-15 01:15:41.764 | ERROR    | data.config_telethon_scheme:handle_error:325 - Error sending comments: database is locked
2023-11-15 01:28:52.636 | ERROR    | data.config_telethon_scheme:handle_error:325 - Error sending comments: database is locked
2023-11-15 01:29:03.683 | ERROR    | data.config_telethon_scheme:monitor_channels:256 - Error monitoring channels: database is locked
2023-11-15 01:29:09.197 | ERROR    | data.config_telethon_scheme:handle_error:325 - Error sending comments: database is locked
2023-11-15 01:43:45.728 | ERROR    | data.config_telethon_scheme:handle_error:328 - Error sending comments: Failed to parse message
2023-11-15 01:43:58.569 | ERROR    | data.config_telethon_scheme:handle_error:328 - Error sending comments: database is locked
2023-11-15 01:44:04.095 | ERROR    | data.config_telethon_scheme:monitor_channels:256 - Error monitoring channels: database is locked
2023-11-15 01:44:04.380 | ERROR    | data.config_telethon_scheme:handle_error:328 - Error sending comments: Failed to parse message
2023-11-15 01:44:05.423 | ERROR    | data.config_telethon_scheme:handle_error:328 - Error sending comments: Failed to parse message
2023-11-15 01:44:06.019 | ERROR    | data.config_telethon_scheme:handle_error:328 - Error sending comments: Failed to parse message
2023-11-15 02:13:33.219 | ERROR    | data.config_telethon_scheme:send_comments:320 - Error sending comments: Comment not found
2023-11-15 02:13:38.751 | ERROR    | data.config_telethon_scheme:monitor_channels:256 - Error monitoring channels: database is locked
2023-11-15 02:13:44.568 | ERROR    | data.config_telethon_scheme:send_comments:320 - Error sending comments: database is locked
2023-11-15 02:13:55.876 | ERROR    | data.config_telethon_scheme:send_comments:320 - Error sending comments: database is locked
2023-11-15 02:19:56.248 | ERROR    | data.config_telethon_scheme:send_comments:322 - Error sending comments: '_asyncio.Task' object has no attribute 'strip'
2023-11-15 02:19:56.890 | ERROR    | data.config_telethon_scheme:send_comments:322 - Error sending comments: '_asyncio.Task' object has no attribute 'strip'
2023-11-15 02:20:01.814 | ERROR    | data.config_telethon_scheme:send_comments:322 - Error sending comments: '_asyncio.Task' object has no attribute 'strip'
2023-11-15 02:23:53.052 | ERROR    | data.config_telethon_scheme:send_comments:322 - Error sending comments: database is locked
2023-11-15 02:23:58.589 | ERROR    | data.config_telethon_scheme:monitor_channels:256 - Error monitoring channels: database is locked
2023-11-15 02:23:58.594 | ERROR    | data.chat_gpt:process_question:46 - Request failed Server disconnected
2023-11-15 02:28:50.600 | ERROR    | data.config_telethon_scheme:send_comments:322 - Error sending comments: database is locked
2023-11-15 02:28:56.124 | ERROR    | data.config_telethon_scheme:monitor_channels:256 - Error monitoring channels: database is locked
2023-11-15 02:29:01.602 | ERROR    | data.config_telethon_scheme:send_comments:322 - Error sending comments: database is locked
2023-11-15 19:45:15.107 | ERROR    | database.db_action:fetch_all:52 - Error while fetching all
2023-11-15 19:53:28.060 | ERROR    | database.db_action:fetch_all:52 - Error while fetching all
2023-11-15 19:53:28.060 | ERROR    | database.db_action:get_monitoring_user_ids:130 - Error retrieving user_ids with monitoring_status True from the database: 'NoneType' object is not iterable
2023-11-15 19:54:28.065 | ERROR    | database.db_action:fetch_all:52 - Error while fetching all
2023-11-15 19:54:28.065 | ERROR    | database.db_action:get_monitoring_user_ids:130 - Error retrieving user_ids with monitoring_status True from the database: 'NoneType' object is not iterable
2023-11-15 19:55:28.058 | ERROR    | database.db_action:fetch_all:52 - Error while fetching all
2023-11-15 19:55:28.058 | ERROR    | database.db_action:get_monitoring_user_ids:130 - Error retrieving user_ids with monitoring_status True from the database: 'NoneType' object is not iterable
2023-11-15 19:56:28.062 | ERROR    | database.db_action:fetch_all:52 - Error while fetching all
2023-11-15 19:56:28.063 | ERROR    | database.db_action:get_monitoring_user_ids:130 - Error retrieving user_ids with monitoring_status True from the database: 'NoneType' object is not iterable
2023-11-15 19:58:25.596 | ERROR    | data.chat_gpt:process_question:46 - Request failed Server disconnected
2023-11-15 19:58:56.418 | ERROR    | data.config_telethon_scheme:send_comments:314 - Error sending comments: database is locked
2023-11-15 19:59:01.944 | ERROR    | data.config_telethon_scheme:monitor_channels:268 - Error monitoring channels: database is locked
2023-11-15 22:06:46.556 | ERROR    | __main__:<module>:75 - func must be a callable or a textual reference to one
2023-11-15 22:51:35.799 | ERROR    | __main__:<module>:81 - HTTP Client says - ClientConnectorError: Cannot connect to host api.telegram.org:443 ssl:default [The semaphore timeout period has expired]
2023-11-15 22:52:07.830 | ERROR    | __main__:<module>:81 - HTTP Client says - ClientConnectorError: Cannot connect to host api.telegram.org:443 ssl:default [The semaphore timeout period has expired]
2023-11-16 03:00:33.286 | ERROR    | database.db_action:fetch_all:52 - Error while fetching all
2023-11-16 03:00:33.287 | ERROR    | database.db_action:get_user_accounts:692 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-16 03:00:33.287 | ERROR    | database.db_action:fetch_all:52 - Error while fetching all
2023-11-16 03:00:33.288 | ERROR    | database.db_action:db_get_all_telegram_channels:342 - Error retrieving Telegram channels from the database for user_id: 462813109: 'NoneType' object is not iterable
2023-11-16 03:00:56.951 | ERROR    | database.db_action:fetch_all:52 - Error while fetching all
2023-11-16 03:00:56.951 | ERROR    | database.db_action:get_user_accounts:692 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-16 03:00:56.951 | ERROR    | database.db_action:fetch_all:52 - Error while fetching all
2023-11-16 03:00:56.952 | ERROR    | database.db_action:db_get_all_telegram_channels:342 - Error retrieving Telegram channels from the database for user_id: 462813109: 'NoneType' object is not iterable
2023-11-16 03:09:22.809 | ERROR    | handlers.get_history:get_history:27 - [Errno 2] No such file or directory: 'history/history_462813109.txt'
2023-11-16 03:11:47.699 | ERROR    | handlers.get_history:get_history:27 - [Errno 2] No such file or directory: 'history/history_462813109.txt'
2023-11-16 04:00:58.636 | ERROR    | handlers.get_history:get_history:27 - [Errno 2] No such file or directory: 'history/history_462813109.txt'
2023-11-16 05:04:08.591 | ERROR    | handlers.get_history:get_history:27 - [Errno 2] No such file or directory: 'history/history_462813109.txt'
2023-11-16 17:47:35.353 | ERROR    | database.db_action:move_accounts:787 - Error moving accounts to accounts_462813109: 'NoneType' object is not iterable
2023-11-16 17:48:23.549 | ERROR    | database.db_action:move_accounts:787 - Error moving accounts to accounts_462813109: 'NoneType' object is not iterable
2023-11-16 18:25:29.352 | ERROR    | database.db_action:move_accounts:788 - Error moving accounts to accounts_462813109: 'NoneType' object is not iterable
2023-11-16 19:01:00.014 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-16 19:01:00.014 | ERROR    | database.db_action:db_get_all_telegram_channels:352 - Error retrieving Telegram channels from the database for user_id: 462813109: 'NoneType' object is not iterable
2023-11-16 19:01:02.336 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-16 19:01:02.336 | ERROR    | database.db_action:db_get_all_telegram_channels:352 - Error retrieving Telegram channels from the database for user_id: 462813109: 'NoneType' object is not iterable
2023-11-16 19:01:11.185 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-16 19:01:11.185 | ERROR    | database.db_action:db_get_all_telegram_grp_id:384 - Error retrieving Telegram channels from the database: 'NoneType' object is not iterable
2023-11-16 19:01:37.903 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-16 19:01:37.903 | ERROR    | database.db_action:db_get_all_telegram_channels:352 - Error retrieving Telegram channels from the database for user_id: 462813109: 'NoneType' object is not iterable
2023-11-16 19:01:37.903 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-16 19:01:37.903 | ERROR    | database.db_action:db_get_all_telegram_ids:368 - Error retrieving Telegram channel_ids from the database for user_id: 462813109: 'NoneType' object is not iterable
2023-11-16 19:02:16.734 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-16 19:02:16.734 | ERROR    | database.db_action:db_get_all_telegram_channels:352 - Error retrieving Telegram channels from the database for user_id: 462813109: 'NoneType' object is not iterable
2023-11-16 19:02:18.754 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-16 19:02:18.754 | ERROR    | database.db_action:db_get_all_telegram_channels:352 - Error retrieving Telegram channels from the database for user_id: 462813109: 'NoneType' object is not iterable
2023-11-16 19:02:21.123 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-16 19:02:21.123 | ERROR    | database.db_action:db_get_all_telegram_channels:352 - Error retrieving Telegram channels from the database for user_id: 462813109: 'NoneType' object is not iterable
2023-11-16 19:02:21.124 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-16 19:02:21.124 | ERROR    | database.db_action:db_get_all_telegram_ids:368 - Error retrieving Telegram channel_ids from the database for user_id: 462813109: 'NoneType' object is not iterable
2023-11-16 19:02:33.249 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-16 19:02:33.249 | ERROR    | database.db_action:db_get_all_telegram_channels:352 - Error retrieving Telegram channels from the database for user_id: 462813109: 'NoneType' object is not iterable
2023-11-16 19:02:37.086 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-16 19:02:37.086 | ERROR    | database.db_action:db_get_all_telegram_channels:352 - Error retrieving Telegram channels from the database for user_id: 462813109: 'NoneType' object is not iterable
2023-11-16 19:02:49.391 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-16 19:02:49.393 | ERROR    | database.db_action:db_get_all_telegram_grp_id:384 - Error retrieving Telegram channels from the database: 'NoneType' object is not iterable
2023-11-16 19:02:57.027 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-16 19:02:57.028 | ERROR    | database.db_action:db_get_all_telegram_channels:352 - Error retrieving Telegram channels from the database for user_id: 462813109: 'NoneType' object is not iterable
2023-11-16 19:02:57.028 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-16 19:02:57.028 | ERROR    | database.db_action:db_get_all_telegram_ids:368 - Error retrieving Telegram channel_ids from the database for user_id: 462813109: 'NoneType' object is not iterable
2023-11-16 19:02:58.618 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-16 19:02:58.618 | ERROR    | database.db_action:db_get_all_telegram_channels:352 - Error retrieving Telegram channels from the database for user_id: 462813109: 'NoneType' object is not iterable
2023-11-16 19:04:13.548 | ERROR    | handlers.get_history:get_history:27 - [Errno 2] No such file or directory: 'history/history_462813109.txt'
2023-11-16 19:44:44.367 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-16 19:44:44.367 | ERROR    | database.db_action:get_all_paid_accounts:703 - Error while retrieving phone records from tables
2023-11-16 19:52:33.667 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-16 19:52:33.668 | ERROR    | database.db_action:get_all_paid_accounts:703 - Error while retrieving phone records from tables
2023-11-16 19:53:30.093 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-16 19:53:30.093 | ERROR    | database.db_action:get_all_paid_accounts:703 - Error while retrieving phone records from tables
2023-11-16 21:24:07.227 | ERROR    | handlers.users.users_handlers:user_add_to_db:96 - not enough values to unpack (expected 2, got 1)
2023-11-16 21:26:16.511 | ERROR    | handlers.tg_accs.add_tg_acc:add_tg_acc:81 - Two-steps verification is enabled and a password is required (caused by SignInRequest)
2023-11-16 21:28:56.852 | ERROR    | handlers.tg_accs.add_tg_acc:add_tg_acc:81 - Two-steps verification is enabled and a password is required (caused by SignInRequest)
2023-11-16 21:32:46.488 | ERROR    | handlers.tg_accs.add_tg_acc:add_tg_acc:81 - Two-steps verification is enabled and a password is required (caused by SignInRequest)
2023-11-16 21:33:44.470 | ERROR    | handlers.tg_accs.add_tg_acc:add_tg_acc:81 - Two-steps verification is enabled and a password is required (caused by SignInRequest)
2023-11-16 21:38:09.990 | ERROR    | handlers.tg_accs.add_tg_acc:add_tg_acc:81 - Two-steps verification is enabled and a password is required (caused by SignInRequest)
2023-11-16 21:43:15.716 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-16 21:43:15.716 | ERROR    | database.db_action:get_user_accounts:718 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-11-16 21:43:44.322 | ERROR    | handlers.get_history:get_history:27 - [Errno 2] No such file or directory: 'history/history_1320351561.txt'
2023-11-16 21:47:15.519 | ERROR    | handlers.groups.add_group:add_group:89 - Telegram server says - Bad Request: chat not found
2023-11-16 21:47:17.934 | ERROR    | handlers.groups.add_group:add_group:89 - Telegram server says - Bad Request: chat not found
2023-11-16 21:47:26.052 | ERROR    | handlers.groups.add_group:add_group:89 - Telegram server says - Bad Request: chat not found
2023-11-16 21:48:39.086 | ERROR    | data.chat_gpt:process_question:46 - Request failed Server disconnected
2023-11-16 21:52:37.590 | ERROR    | data.config_telethon_scheme:join_group:383 - Error joining group: RPCError -503: Timedout (caused by GetStateRequest)
2023-11-17 00:44:34.498 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-17 00:44:34.498 | ERROR    | database.db_action:get_user_accounts:718 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-11-17 00:46:13.192 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-17 00:46:13.192 | ERROR    | database.db_action:get_user_accounts:718 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-11-17 00:58:38.502 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-17 00:58:38.502 | ERROR    | database.db_action:get_user_accounts:718 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-11-17 01:05:13.223 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-17 01:05:13.224 | ERROR    | database.db_action:get_user_accounts:718 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-11-17 01:23:09.739 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-17 01:23:09.740 | ERROR    | database.db_action:get_user_accounts:718 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-11-17 01:24:26.382 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-17 01:24:26.382 | ERROR    | database.db_action:get_user_accounts:718 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-11-17 01:24:29.178 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-17 01:24:29.178 | ERROR    | database.db_action:get_user_accounts:718 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-11-17 01:24:33.747 | ERROR    | database.db_action:fetch_all:61 - Error while fetching all
2023-11-17 01:24:33.747 | ERROR    | database.db_action:get_user_accounts:718 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-11-17 01:24:57.202 | ERROR    | handlers.get_history:get_history:30 - [Errno 2] No such file or directory: 'history/history_6505935002.txt'
2023-11-17 02:35:20.873 | ERROR    | data.config_telethon_scheme:send_comments:391 - Error sending comments: database is locked
2023-11-17 02:35:35.276 | ERROR    | data.config_telethon_scheme:monitor_channels:343 - Error monitoring channels: database is locked
2023-11-21 19:07:18.994 | ERROR    | data.config_telethon_scheme:change_username:171 - Error changing username: Nobody is using this username, or the username is unacceptable. If the latter, it must match r"[a-zA-Z][\w\d]{3,30}[a-zA-Z\d]" (caused by UpdateUsernameRequest)
2023-11-21 19:42:47.233 | ERROR    | data.chat_gpt:process_question:46 - Request failed Server disconnected
2023-11-21 19:48:20.879 | ERROR    | data.config_telethon_scheme:send_comments:415 - Error sending comments: '_asyncio.Task' object has no attribute 'strip'
2023-11-21 19:48:25.360 | ERROR    | data.config_telethon_scheme:send_comments:415 - Error sending comments: '_asyncio.Task' object has no attribute 'strip'
2023-11-21 19:48:34.979 | ERROR    | data.config_telethon_scheme:send_comments:415 - Error sending comments: '_asyncio.Task' object has no attribute 'strip'
2023-11-21 19:48:42.349 | ERROR    | data.config_telethon_scheme:send_comments:415 - Error sending comments: '_asyncio.Task' object has no attribute 'strip'
2023-11-21 19:48:45.727 | ERROR    | data.config_telethon_scheme:send_comments:415 - Error sending comments: '_asyncio.Task' object has no attribute 'strip'
2023-11-21 19:48:50.261 | ERROR    | data.config_telethon_scheme:send_comments:415 - Error sending comments: '_asyncio.Task' object has no attribute 'strip'
2023-11-21 19:50:22.929 | ERROR    | data.chat_gpt:process_question:46 - Request failed Server disconnected
2023-11-21 20:11:46.822 | ERROR    | data.chat_gpt:send_request:82 - 'choices'
2023-11-21 20:12:07.602 | ERROR    | data.chat_gpt:send_request:82 - 'choices'
2023-11-21 20:12:28.458 | ERROR    | data.chat_gpt:send_request:82 - 'choices'
2023-11-21 20:13:41.214 | ERROR    | data.config_telethon_scheme:send_comments:418 - Error sending comments: database is locked
2023-11-21 20:13:46.733 | ERROR    | data.config_telethon_scheme:monitor_channels:363 - database is locked
2023-11-21 20:46:15.834 | ERROR    | data.chat_gpt:process_question:46 - Request failed Server disconnected
2023-11-21 20:46:37.068 | ERROR    | data.config_telethon_scheme:join_group:457 - Error joining group: database is locked
2023-11-21 20:46:42.697 | ERROR    | data.config_telethon_scheme:monitor_channels:367 - Error monitoring channels: database is locked
2023-11-21 20:49:33.352 | ERROR    | data.chat_gpt:process_question:46 - Request failed Server disconnected
2023-11-21 20:50:25.923 | ERROR    | data.config_telethon_scheme:send_comments:414 - Error sending comments: RPCError -503: Timedout (caused by InvokeWithLayerRequest(InitConnectionRequest(GetConfigRequest)))
2023-11-22 02:55:28.240 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 02:55:28.240 | ERROR    | database.db_action:get_user_accounts:721 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 02:55:41.084 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 02:55:41.085 | ERROR    | database.db_action:get_user_accounts:721 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 02:55:48.697 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 03:00:52.046 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 03:00:52.046 | ERROR    | database.db_action:get_user_accounts:721 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 03:01:24.475 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 03:01:24.476 | ERROR    | database.db_action:get_user_accounts:721 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 03:01:29.975 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 03:01:29.975 | ERROR    | database.db_action:get_user_accounts:721 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 03:01:32.231 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 03:01:32.231 | ERROR    | database.db_action:get_user_accounts:721 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 03:01:36.174 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 03:01:36.174 | ERROR    | database.db_action:get_user_accounts:721 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 03:01:36.287 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 03:01:36.287 | ERROR    | database.db_action:get_user_accounts:721 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 03:01:41.509 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 03:01:41.510 | ERROR    | database.db_action:get_user_accounts:721 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 03:01:48.562 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 03:01:48.562 | ERROR    | database.db_action:get_user_accounts:721 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 03:02:34.321 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 03:02:34.322 | ERROR    | database.db_action:get_user_accounts:721 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 03:02:39.144 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 03:02:39.144 | ERROR    | database.db_action:get_user_accounts:721 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 03:03:02.736 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 03:03:02.736 | ERROR    | database.db_action:get_user_accounts:721 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 04:15:29.971 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:15:29.971 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 04:17:25.369 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:17:25.369 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 04:17:56.967 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:17:56.967 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 04:18:05.092 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:18:05.093 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-11-22 04:18:05.243 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:18:05.244 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-11-22 04:18:05.485 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:18:05.485 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 04:18:06.237 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:18:06.238 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 04:18:09.212 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:18:09.212 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-11-22 04:18:09.597 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:18:09.597 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-11-22 04:18:09.746 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:18:09.746 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 04:18:49.129 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:18:49.129 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-11-22 04:18:49.276 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:18:49.276 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-11-22 04:18:49.631 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:18:49.631 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 04:19:34.001 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:19:34.001 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 04:19:37.604 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:19:37.605 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-11-22 04:19:37.759 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:19:37.759 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-11-22 04:19:37.913 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:19:37.913 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-22 04:19:51.703 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:19:51.703 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-11-22 04:19:51.849 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:19:51.849 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-11-22 04:22:02.116 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:22:02.116 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-11-22 04:22:02.284 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:22:02.284 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-11-22 04:29:28.338 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:29:28.338 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-11-22 04:29:28.486 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 04:29:28.487 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-11-22 05:23:58.025 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 05:23:58.025 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-11-22 05:23:58.173 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-22 05:23:58.174 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-11-24 22:17:28.135 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-24 22:17:28.136 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-11-24 22:17:28.293 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-24 22:17:28.293 | ERROR    | database.db_action:get_user_accounts:720 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-11-25 04:34:53.773 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-25 04:34:53.774 | ERROR    | database.db_action:db_get_all_tg_accounts_with_comments:871 - Error retrieving Telegram accounts with comments from the database: 'NoneType' object is not iterable
2023-11-25 04:36:45.975 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-25 04:36:45.975 | ERROR    | database.db_action:db_get_all_tg_accounts_with_comments:880 - Error retrieving Telegram accounts with comments from the database: 'NoneType' object is not iterable
2023-11-25 04:39:57.069 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-25 04:39:57.069 | ERROR    | database.db_action:db_get_all_tg_accounts_with_comments:880 - Error retrieving Telegram accounts with comments from the database: 'NoneType' object is not iterable
2023-11-25 04:42:29.009 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-25 04:42:29.009 | ERROR    | database.db_action:db_get_all_tg_accounts_with_comments:881 - Error retrieving Telegram accounts with comments from the database: 'NoneType' object is not iterable
2023-11-25 04:49:08.831 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-25 04:51:45.047 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-25 05:08:14.379 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-25 05:08:14.517 | ERROR    | handlers.tg_accs.get_tg_accs:get_acc_info:69 - 'list' object has no attribute 'items'
2023-11-25 05:09:45.737 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-25 05:09:47.587 | ERROR    | handlers.tg_accs.get_tg_accs:get_acc_info:69 - Telegram server says - Bad Request: message text is empty
2023-11-25 05:15:54.808 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-25 05:15:55.598 | ERROR    | handlers.tg_accs.get_tg_accs:get_acc_info:71 - Telegram server says - Bad Request: message text is empty
2023-11-25 05:16:31.317 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-25 05:16:32.092 | ERROR    | handlers.tg_accs.get_tg_accs:get_acc_info:72 - Telegram server says - Bad Request: message text is empty
2023-11-25 05:19:49.761 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-25 05:27:50.439 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-25 05:27:50.439 | ERROR    | database.db_action:get_user_accounts:721 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-11-25 05:27:50.585 | ERROR    | database.db_action:fetch_all:64 - Error while fetching all
2023-11-25 05:27:50.585 | ERROR    | database.db_action:get_user_accounts:721 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-11-25 05:27:58.353 | ERROR    | data.config_telethon_scheme:monitor_channels:374 - Error monitoring channels: No user has "dohggjhh" as username
2023-11-25 05:28:57.531 | ERROR    | data.config_telethon_scheme:monitor_channels:374 - Error monitoring channels: No user has "dohggjhh" as username
2023-11-25 05:29:57.509 | ERROR    | data.config_telethon_scheme:monitor_channels:374 - Error monitoring channels: No user has "dohggjhh" as username
2023-11-25 05:30:57.505 | ERROR    | data.config_telethon_scheme:monitor_channels:374 - Error monitoring channels: No user has "dohggjhh" as username
2023-11-25 05:33:41.502 | ERROR    | data.config_telethon_scheme:send_comments:424 - Error sending comments: database is locked
2023-11-25 05:33:47.070 | ERROR    | data.config_telethon_scheme:monitor_channels:377 - Error monitoring channels: database is locked
2023-11-25 06:39:41.605 | ERROR    | database.db_action:_execute_query:53 - Error while executing query
2023-11-25 06:39:41.606 | ERROR    | database.db_action:db_add_user:255 - Error while adding user with user_id 462813109 to the table.
2023-11-25 06:39:41.608 | ERROR    | database.db_action:_execute_query:53 - Error while executing query
2023-11-25 06:39:41.608 | ERROR    | database.db_action:add_user_to_subscriptions:156 - Error while adding user with user_id 462813109 to the subscriptions table.
2023-11-25 06:40:28.116 | ERROR    | database.db_action:get_user_accounts:757 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-25 06:40:28.118 | ERROR    | database.db_action:get_user_ids_by_sub_type:774 - Error retrieving user_ids with sub_type Базовый from the subscriptions table: 'NoneType' object is not iterable
2023-11-25 06:40:49.639 | ERROR    | database.db_action:_execute_query:53 - Error while executing query
2023-11-25 06:40:49.639 | ERROR    | database.db_action:db_add_user:255 - Error while adding user with user_id 462813109 to the table.
2023-11-25 06:40:49.640 | ERROR    | database.db_action:_execute_query:53 - Error while executing query
2023-11-25 06:40:49.640 | ERROR    | database.db_action:add_user_to_subscriptions:156 - Error while adding user with user_id 462813109 to the subscriptions table.
2023-11-25 06:40:51.127 | ERROR    | database.db_action:get_user_accounts:757 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-11-25 06:40:57.013 | ERROR    | database.db_action:db_get_all_gpt_accounts:609 - Error retrieving GPT account API keys from the database: 'NoneType' object is not iterable
2023-11-25 06:41:36.380 | ERROR    | database.db_action:_execute_query:53 - Error while executing query
2023-11-25 06:41:36.381 | ERROR    | database.db_action:db_add_user:255 - Error while adding user with user_id 462813109 to the table.
2023-11-25 06:41:36.383 | ERROR    | database.db_action:_execute_query:53 - Error while executing query
2023-11-25 06:41:36.383 | ERROR    | database.db_action:add_user_to_subscriptions:156 - Error while adding user with user_id 462813109 to the subscriptions table.
2023-11-25 07:26:54.830 | ERROR    | data.config_telethon_scheme:send_comments:424 - Error sending comments: You're banned from sending messages in supergroups/channels (caused by SendMessageRequest)
2023-11-25 07:29:09.422 | ERROR    | data.config_telethon_scheme:send_comments:424 - Error sending comments: database is locked
2023-11-25 07:30:01.110 | ERROR    | data.config_telethon_scheme:monitor_channels:377 - Error monitoring channels: database is locked
2023-11-25 07:30:59.369 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-11-25 07:39:55.678 | ERROR    | data.config_telethon_scheme:send_comments:424 - Error sending comments: database is locked
2023-11-25 07:57:19.684 | ERROR    | data.config_telethon_scheme:join_group:469 - Error joining group: database is locked
2023-11-25 07:57:25.227 | ERROR    | data.config_telethon_scheme:monitor_channels:379 - Error monitoring channels: database is locked
2023-11-25 07:57:33.813 | ERROR    | data.config_telethon_scheme:join_group:469 - Error joining group: database is locked
2023-11-25 07:57:39.354 | ERROR    | data.config_telethon_scheme:monitor_channels:379 - Error monitoring channels: database is locked
2023-11-25 08:02:32.199 | ERROR    | database.db_action:create_pool:32 - Error while creating connection pool
2023-11-25 08:06:41.353 | ERROR    | data.config_telethon_scheme:send_comments:426 - Error sending comments: You're banned from sending messages in supergroups/channels (caused by SendMessageRequest)
2023-11-25 08:06:49.137 | ERROR    | data.config_telethon_scheme:send_comments:426 - Error sending comments: You're banned from sending messages in supergroups/channels (caused by SendMessageRequest)
2023-11-25 08:15:52.205 | ERROR    | data.config_telethon_scheme:send_comments:436 - Error sending comments: You're banned from sending messages in supergroups/channels (caused by SendMessageRequest)
2023-11-25 08:23:06.609 | ERROR    | data.config_telethon_scheme:send_comments:437 - Error sending comments: database is locked
2023-11-25 08:24:57.889 | ERROR    | data.config_telethon_scheme:send_comments:437 - Error sending comments: database is locked
2023-11-25 08:27:00.712 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-11-25 08:33:47.705 | ERROR    | data.chat_gpt:process_question:46 - Request failed Server disconnected
2023-11-25 08:34:27.896 | ERROR    | data.config_telethon_scheme:join_group:479 - Error joining group: database is locked
2023-11-25 08:34:33.431 | ERROR    | data.config_telethon_scheme:monitor_channels:389 - Error monitoring channels: database is locked
2023-11-25 21:01:33.031 | ERROR    | data.config_telethon_scheme:monitor_channels:389 - Error monitoring channels: Connection to Telegram failed 5 time(s)
2023-11-25 21:16:11.645 | ERROR    | handlers.groups.add_group:add_group:96 - Telegram server says - Bad Request: chat not found
2023-11-25 21:19:33.422 | ERROR    | handlers.groups.add_group:add_group:98 - Telegram server says - Bad Request: chat not found
2023-11-25 21:21:07.488 | ERROR    | handlers.groups.add_group:add_group:98 - Telegram server says - Bad Request: chat not found
2023-11-25 23:50:33.305 | ERROR    | data.config_telethon_scheme:send_comments:437 - Error sending comments: database is locked
2023-11-26 01:30:34.886 | ERROR    | data.config_telethon_scheme:join_group:476 - Error joining group: database is locked
2023-11-26 01:30:40.453 | ERROR    | data.config_telethon_scheme:monitor_channels:384 - Error monitoring channels: database is locked
2023-11-26 01:30:59.443 | ERROR    | data.config_telethon_scheme:send_comments:433 - Error sending comments: database is locked
2023-11-26 01:40:53.972 | ERROR    | data.chat_gpt:process_question:46 - Request failed Server disconnected
2023-11-26 01:40:54.171 | ERROR    | data.config_telethon_scheme:send_comments:437 - Error sending comments: Comment not found
2023-11-26 01:40:54.375 | ERROR    | data.config_telethon_scheme:send_comments:437 - Error sending comments: Comment not found
2023-11-26 01:40:58.817 | ERROR    | data.config_telethon_scheme:send_comments:437 - Error sending comments: Comment not found
2023-11-26 01:41:01.963 | ERROR    | data.config_telethon_scheme:send_comments:437 - Error sending comments: Comment not found
2023-11-26 01:41:05.296 | ERROR    | data.config_telethon_scheme:send_comments:437 - Error sending comments: Comment not found
2023-11-26 01:41:09.430 | ERROR    | data.config_telethon_scheme:send_comments:437 - Error sending comments: Comment not found
2023-11-26 01:41:11.275 | ERROR    | data.config_telethon_scheme:send_comments:437 - Error sending comments: Comment not found
2023-11-26 01:41:22.434 | ERROR    | data.config_telethon_scheme:send_comments:437 - Error sending comments: Comment not found
2023-11-26 02:00:09.629 | ERROR    | data.config_telethon_scheme:send_comments:437 - Error sending comments: database is locked
2023-11-26 02:00:15.171 | ERROR    | data.config_telethon_scheme:monitor_channels:388 - Error monitoring channels: database is locked
2023-11-26 02:00:22.180 | ERROR    | data.config_telethon_scheme:send_comments:437 - Error sending comments: Comment not found
2023-11-26 02:00:28.662 | ERROR    | data.config_telethon_scheme:send_comments:437 - Error sending comments: database is locked
2023-11-26 02:00:39.746 | ERROR    | data.config_telethon_scheme:send_comments:437 - Error sending comments: database is locked
2023-11-26 02:00:39.761 | ERROR    | data.chat_gpt:process_question:46 - Request failed Server disconnected
2023-11-26 02:00:39.761 | ERROR    | data.chat_gpt:process_question:46 - Request failed Server disconnected
2023-11-26 02:00:39.762 | ERROR    | data.chat_gpt:process_question:46 - Request failed Server disconnected
2023-11-26 02:00:39.762 | ERROR    | data.chat_gpt:process_question:46 - Request failed Server disconnected
2023-11-26 02:00:40.993 | ERROR    | data.config_telethon_scheme:send_comments:437 - Error sending comments: Comment not found
2023-11-26 02:00:45.593 | ERROR    | data.chat_gpt:process_question:46 - Request failed Server disconnected
2023-12-02 09:08:31.404 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:08:31.405 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-12-02 09:08:31.634 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:08:31.634 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-12-02 09:08:35.562 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:08:35.562 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-12-02 09:08:35.788 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:08:35.789 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-12-02 09:11:16.626 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:11:16.626 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-12-02 09:11:16.830 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:11:16.831 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-12-02 09:12:13.115 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:12:13.115 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-12-02 09:12:13.713 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:12:13.713 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-12-02 09:23:41.270 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:23:41.270 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-12-02 09:23:41.485 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:23:41.486 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-12-02 09:50:03.389 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:50:03.390 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-12-02 09:50:03.696 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:50:03.696 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-12-02 09:50:04.496 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:50:04.496 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-12-02 09:50:04.715 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:50:04.715 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-12-02 09:50:24.397 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:50:24.398 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-12-02 09:50:24.612 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:50:24.612 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-12-02 09:51:09.770 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:51:09.770 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-12-02 09:51:10.344 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:51:10.344 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-12-02 09:51:51.741 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:51:51.741 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-12-02 09:51:51.967 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:51:51.967 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-12-02 09:53:00.853 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:53:00.853 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-12-02 09:53:33.066 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:53:33.066 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-12-02 09:53:54.270 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:53:54.270 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-12-02 09:53:57.890 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:53:57.890 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-12-02 09:54:53.572 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 09:54:53.572 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-12-02 12:30:21.165 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 12:30:21.167 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-12-02 12:30:21.610 | ERROR    | database.db_action:fetch_all:68 - Error while fetching all
2023-12-02 12:30:21.610 | ERROR    | database.db_action:get_user_accounts:739 - Error retrieving phone numbers from table accounts_6505935002: 'NoneType' object is not iterable
2023-12-02 12:34:11.481 | ERROR    | handlers.tg_accs.user_tg_accs_settings:process_photo:220 - 'PhotoSize' object has no attribute 'download'
2023-12-02 12:44:29.117 | ERROR    | handlers.tg_accs.user_tg_accs_settings:process_photo:221 - 'PhotoSize' object has no attribute 'download'
2023-12-02 12:47:18.496 | ERROR    | handlers.tg_accs.user_tg_accs_settings:process_photo:226 - 'PhotoSize' object has no attribute 'download'
2023-12-02 12:52:32.967 | ERROR    | handlers.tg_accs.user_tg_accs_settings:process_photo:227 - 'PhotoSize' object has no attribute 'download'
2023-12-02 12:53:42.798 | ERROR    | data.config_telethon_scheme:change_profile_photo:211 - Error changing profile photo: [WinError 2] The system cannot find the file specified: 'photo.jpg'
2023-12-02 12:54:30.286 | ERROR    | data.config_telethon_scheme:change_profile_photo:211 - Error changing profile photo: InputPhoto.__init__() missing 2 required positional arguments: 'access_hash' and 'file_reference'
2023-12-02 13:06:10.978 | ERROR    | data.config_telethon_scheme:change_profile_photo:218 - Error changing profile photo: Make sure to pass a valid image file for the right InputFile parameter (caused by UploadProfilePhotoRequest)
2023-12-02 13:12:17.175 | ERROR    | data.config_telethon_scheme:change_profile_photo:210 - Error changing profile photo: Cannot send requests while disconnected
2023-12-03 20:40:06.301 | ERROR    | __main__:<module>:87 - 'IntervalOperations' object has no attribute 'start_scheduler'
2023-12-03 20:42:14.158 | ERROR    | database.subscription:check_subscription_expiry:22 - Error updating subscription status: invalid input for query argument $1: '2023-12-03 20:42:14' (expected a datetime.date or datetime.datetime instance, got 'str')
2023-12-03 20:45:47.318 | ERROR    | database.subscription:check_subscription_expiry:22 - Error updating subscription status: invalid value "Н" for "DD"
DETAIL:  Value must be an integer.
2023-12-03 20:51:27.170 | ERROR    | database.subscription:check_subscription_expiry:22 - Error updating subscription status: invalid value "Н" for "DD"
DETAIL:  Value must be an integer.
2023-12-03 21:11:18.991 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-03 21:11:18.992 | ERROR    | database.db_action:get_user_accounts:737 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-12-03 21:13:16.747 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-03 21:13:16.747 | ERROR    | database.db_action:get_user_accounts:737 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-12-03 21:15:21.944 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-03 21:15:21.944 | ERROR    | database.db_action:get_user_accounts:737 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-12-03 21:16:32.280 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-03 21:16:32.280 | ERROR    | database.db_action:get_user_accounts:737 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-12-03 21:18:30.278 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-03 21:18:30.279 | ERROR    | database.db_action:get_user_accounts:737 - Error retrieving phone numbers from table accounts_1320351561: 'NoneType' object is not iterable
2023-12-04 12:11:56.249 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-04 12:11:56.249 | ERROR    | database.db_action:get_user_accounts:737 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-04 12:16:17.157 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-04 12:16:17.157 | ERROR    | database.db_action:get_user_accounts:737 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-04 12:16:52.029 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-04 12:16:52.029 | ERROR    | database.db_action:get_user_accounts:737 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-04 12:18:37.447 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-04 12:18:37.447 | ERROR    | database.db_action:get_user_accounts:737 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-04 12:26:52.185 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-04 12:26:52.185 | ERROR    | database.db_action:get_user_accounts:737 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-04 12:27:02.030 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-04 12:27:02.031 | ERROR    | database.db_action:get_user_accounts:737 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-04 12:27:06.219 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-04 12:27:06.219 | ERROR    | database.db_action:get_user_accounts:737 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-04 12:28:07.161 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-04 12:28:07.161 | ERROR    | database.db_action:get_user_accounts:737 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-04 12:28:30.691 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-04 12:28:30.691 | ERROR    | database.db_action:get_user_accounts:737 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-04 12:59:20.104 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-04 12:59:20.105 | ERROR    | database.db_action:get_user_accounts:737 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-04 12:59:23.713 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-04 12:59:23.713 | ERROR    | database.db_action:get_user_accounts:737 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-05 11:36:45.666 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-05 11:36:45.667 | ERROR    | database.db_action:get_user_accounts:737 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-05 11:36:58.345 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-05 11:36:58.346 | ERROR    | database.db_action:get_user_accounts:737 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-05 11:37:01.061 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-05 11:37:01.061 | ERROR    | database.db_action:get_user_accounts:737 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-08 17:06:49.674 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-08 17:06:49.674 | ERROR    | database.db_action:get_user_accounts:737 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-11 14:23:06.128 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-11 14:23:06.128 | ERROR    | database.db_action:get_user_accounts:737 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-11 14:43:37.337 | ERROR    | data.config_telethon_scheme:login_phone:83 - Authorization error
2023-12-11 14:44:03.026 | ERROR    | handlers.tg_accs.add_tg_acc:add_tg_acc:84 - Two-steps verification is enabled and a password is required (caused by SignInRequest)
2023-12-11 16:27:12.707 | ERROR    | data.config_telethon_scheme:change_username:186 - Error changing username: The username is already taken (caused by UpdateUsernameRequest)
2023-12-11 16:36:30.013 | ERROR    | data.config_telethon_scheme:change_username:187 - Error changing username: The username is already taken (caused by UpdateUsernameRequest)
2023-12-11 16:38:34.940 | ERROR    | data.config_telethon_scheme:change_username:187 - Error changing username: The username is already taken (caused by UpdateUsernameRequest)
2023-12-11 16:40:13.200 | ERROR    | data.config_telethon_scheme:change_username:187 - Error changing username: The username is already taken (caused by UpdateUsernameRequest)
2023-12-11 16:40:20.308 | ERROR    | data.config_telethon_scheme:change_username:191 - Error changing username: Nobody is using this username, or the username is unacceptable. If the latter, it must match r"[a-zA-Z][\w\d]{3,30}[a-zA-Z\d]" (caused by UpdateUsernameRequest)
2023-12-11 17:14:11.245 | ERROR    | data.config_telethon_scheme:change_username:191 - Error changing username: A wait of 782 seconds is required (caused by UpdateUsernameRequest)
2023-12-12 12:53:48.281 | ERROR    | handlers.monitoring:monitoring_start:30 - В таблице нет аккаунтов для мониторинга.
2023-12-12 12:54:49.134 | ERROR    | handlers.tg_accs.add_tg_acc:add_tg_acc:84 - Two-steps verification is enabled and a password is required (caused by SignInRequest)
2023-12-12 14:52:43.476 | ERROR    | data.config_telethon_scheme:send_comments:466 - Error sending comments: You join the discussion group before commenting, see [here](/api/discussion#requiring-users-to-join-the-group) for more info (caused by SendMessageRequest)
2023-12-12 15:35:09.047 | ERROR    | data.config_telethon_scheme:send_comments:468 - Error sending comments: You join the discussion group before commenting, see [here](/api/discussion#requiring-users-to-join-the-group) for more info (caused by SendMessageRequest)
2023-12-12 19:00:02.012 | ERROR    | data.config_telethon_scheme:monitor_channels:441 - Error monitoring channels: TelethonSendMessages.join_group_disc() takes 2 positional arguments but 3 were given
2023-12-12 19:11:58.523 | ERROR    | data.config_telethon_scheme:send_comments:488 - Error sending comments: You join the discussion group before commenting, see [here](/api/discussion#requiring-users-to-join-the-group) for more info (caused by SendMessageRequest)
2023-12-12 19:20:41.536 | ERROR    | data.config_telethon_scheme:send_comments:485 - Error sending comments: You join the discussion group before commenting, see [here](/api/discussion#requiring-users-to-join-the-group) for more info (caused by SendMessageRequest)
2023-12-12 19:23:25.962 | ERROR    | data.config_telethon_scheme:send_comments:486 - Error sending comments: You join the discussion group before commenting, see [here](/api/discussion#requiring-users-to-join-the-group) for more info (caused by SendMessageRequest)
2023-12-12 19:44:46.838 | ERROR    | data.config_telethon_scheme:monitor_channels:461 - Error monitoring channels: not enough values to unpack (expected 5, got 4)
2023-12-12 19:52:28.638 | ERROR    | data.config_telethon_scheme:monitor_channels:469 - Error monitoring channels: not enough values to unpack (expected 5, got 4)
2023-12-12 19:56:05.251 | ERROR    | data.config_telethon_scheme:send_comments:516 - Error sending comments: You join the discussion group before commenting, see [here](/api/discussion#requiring-users-to-join-the-group) for more info (caused by SendMessageRequest)
2023-12-12 22:18:35.361 | ERROR    | data.config_telethon_scheme:monitor_channels:469 - Error monitoring channels: Cannot send requests while disconnected
2023-12-15 19:05:48.794 | ERROR    | handlers.tg_accs.user_tg_accs_settings:user_accs_get_info:182 - not enough values to unpack (expected 8, got 7)
2023-12-15 19:55:18.745 | ERROR    | handlers.tg_accs.user_tg_accs_settings:user_accs_get_info:182 - not enough values to unpack (expected 8, got 7)
2023-12-16 14:17:54.634 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-16 14:17:54.635 | ERROR    | database.db_action:get_user_accounts:741 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-16 14:20:59.377 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-16 14:20:59.377 | ERROR    | database.db_action:get_user_accounts:741 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-16 14:42:02.891 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-16 14:42:02.891 | ERROR    | database.db_action:get_user_accounts:741 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-16 14:43:15.401 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-16 14:43:15.401 | ERROR    | database.db_action:get_user_accounts:741 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-16 14:43:18.285 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-16 14:43:18.286 | ERROR    | database.db_action:get_user_accounts:741 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-16 14:43:40.778 | ERROR    | database.db_action:db_get_all_tg_accounts_with_comments:930 - Error retrieving Telegram accounts with comments from the database: record index out of range
2023-12-16 14:43:52.678 | ERROR    | database.db_action:db_get_all_tg_accounts_with_comments:930 - Error retrieving Telegram accounts with comments from the database: record index out of range
2023-12-16 14:45:58.355 | ERROR    | database.db_action:db_get_all_tg_accounts_with_comments:930 - Error retrieving Telegram accounts with comments from the database: record index out of range
2023-12-16 14:47:26.281 | ERROR    | handlers.tg_accs.get_tg_accs:get_acc_info:75 - can only concatenate str (not "tuple") to str
2023-12-16 14:51:20.061 | ERROR    | handlers.tg_accs.get_tg_accs:get_acc_info:76 - can only concatenate str (not "tuple") to str
2023-12-16 15:05:11.766 | ERROR    | handlers.tg_accs.get_tg_accs:get_acc_info:75 - can only concatenate str (not "tuple") to str
2023-12-16 15:10:44.699 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-16 15:10:44.700 | ERROR    | database.db_action:get_user_accounts:741 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-16 15:57:24.816 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-16 15:57:24.816 | ERROR    | database.db_action:get_user_accounts:741 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-16 15:58:17.423 | ERROR    | database.db_action:fetch_all:66 - Error while fetching all
2023-12-16 15:58:17.423 | ERROR    | database.db_action:get_user_accounts:741 - Error retrieving phone numbers from table accounts_462813109: 'NoneType' object is not iterable
2023-12-17 00:25:04.852 | ERROR    | data.config_telethon_scheme:monitor_channels:493 - Error monitoring channels: Cannot send requests while disconnected
2023-12-17 01:24:45.659 | ERROR    | data.config_telethon_scheme:send_comments:543 - Error sending comments: You join the discussion group before commenting, see [here](/api/discussion#requiring-users-to-join-the-group) for more info (caused by SendMessageRequest)
2023-12-17 14:56:35.098 | ERROR    | handlers.groups.add_group:add_channel:107 - Telegram server says - Bad Request: chat not found
2023-12-17 14:56:37.940 | ERROR    | handlers.groups.add_group:add_channel:107 - Telegram server says - Bad Request: chat not found
2023-12-17 14:59:26.707 | ERROR    | data.config_telethon_scheme:join_group_disc:624 - Error joining group: The channel specified is private and you lack permission to access it. Another reason may be that you were banned from it (caused by JoinChannelRequest)
2023-12-17 14:59:40.448 | ERROR    | data.config_telethon_scheme:send_comments:543 - Error sending comments: The channel specified is private and you lack permission to access it. Another reason may be that you were banned from it (caused by SendMessageRequest)
2023-12-20 03:20:35.690 | ERROR    | data.config_telethon_scheme:delete_all_profile_photos:197 - Error deleting profile photos: Cannot cast int to any kind of InputPhoto.
2023-12-20 03:22:21.304 | ERROR    | data.config_telethon_scheme:delete_all_profile_photos:199 - Error deleting profile photos: Cannot cast int to any kind of InputPhoto.
2023-12-20 16:33:22.744 | ERROR    | handlers.tg_accs.user_tg_accs_settings:user_accs_get_info:190 - back_to_accs() missing 1 required positional argument: 'state'
2023-12-21 17:11:20.874 | ERROR    | data.config_telethon_scheme:monitor_channels:529 - Error monitoring channels: Cannot choose from an empty sequence
2023-12-21 17:17:20.438 | ERROR    | data.config_telethon_scheme:send_comments:577 - Error sending comments: You join the discussion group before commenting, see [here](/api/discussion#requiring-users-to-join-the-group) for more info (caused by SendMessageRequest)
